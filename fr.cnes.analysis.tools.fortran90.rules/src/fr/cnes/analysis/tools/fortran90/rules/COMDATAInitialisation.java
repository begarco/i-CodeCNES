/* The following code was generated by JFlex 1.6.1 */

/************************************************************************************************/
/* i-Code CNES is a static code analyzer.                                                       */
/* This software is a free software, under the terms of the Eclipse Public License version 1.0. */ 
/* http://www.eclipse.org/legal/epl-v10.html                                                    */
/************************************************************************************************/ 

/**********************************************************************************/
/* This file is used to generate a rule checker for COM.DATA.Initialisation rule. */
/* For further information on this, we advise you to refer to RNC manuals.	      */
/* As many comments have been done on the ExampleRule.lex file, this file         */
/* will restrain its comments on modifications.								      */
/*																			      */
/**********************************************************************************/


package fr.cnes.analysis.tools.fortran90.rules;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.eclipse.core.runtime.IPath;

import fr.cnes.analysis.tools.analyzer.datas.AbstractRule;import fr.cnes.analysis.tools.analyzer.datas.Violation;
import fr.cnes.analysis.tools.analyzer.exception.JFlexException;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>lex/COMDATAInitialisation.lex</tt>
 */
public class COMDATAInitialisation extends AbstractRule {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMMENT = 2;
  public static final int NAMING = 4;
  public static final int NEW_LINE = 6;
  public static final int LINE = 8;
  public static final int INIT = 10;
  public static final int VAR_EQ = 12;
  public static final int WAIT = 14;
  public static final int FUNC = 16;
  public static final int AVOID = 18;
  public static final int DATA = 20;
  public static final int WAIT_ARRAY = 22;
  public static final int PARAMS = 24;
  public static final int ARRAY = 26;
  public static final int DECLARATION = 28;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\46\1\2\1\55\1\54\1\54\22\0\1\27\1\1\1\50"+
    "\1\0\1\51\1\45\1\51\1\47\1\31\1\32\1\0\1\44\1\57"+
    "\1\43\1\42\1\52\12\41\1\56\2\0\1\24\3\0\1\21\1\17"+
    "\1\6\1\15\1\14\1\3\1\20\1\25\1\34\2\40\1\23\1\22"+
    "\1\5\1\11\1\12\1\37\1\13\1\35\1\7\1\4\1\36\1\53"+
    "\1\26\1\30\1\40\4\0\1\33\1\0\1\21\1\17\1\6\1\15"+
    "\1\14\1\3\1\20\1\25\1\34\2\40\1\23\1\22\1\5\1\11"+
    "\1\12\1\37\1\13\1\35\1\7\1\4\1\36\1\53\1\26\1\30"+
    "\1\40\12\0\1\55\252\0\2\10\115\0\1\16\u1ea8\0\1\55\1\55"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\17\0\1\1\1\2\1\3\12\1\1\4\1\5\1\2"+
    "\1\6\1\7\1\1\1\2\1\5\5\10\1\1\4\10"+
    "\1\1\3\10\1\1\2\10\5\1\1\10\1\4\1\3"+
    "\1\2\1\11\5\10\1\3\4\10\1\3\3\10\1\12"+
    "\2\10\6\3\1\10\1\4\1\13\1\14\1\15\1\16"+
    "\1\17\3\13\1\20\1\21\2\22\1\20\1\22\1\23"+
    "\1\5\1\20\1\22\6\20\1\22\1\4\2\5\1\24"+
    "\1\25\1\26\1\27\1\3\1\30\1\31\1\32\1\33"+
    "\1\34\2\35\1\5\2\35\1\5\3\35\2\5\13\0"+
    "\1\5\11\0\2\10\1\0\1\36\5\10\3\0\10\10"+
    "\1\0\3\10\1\37\5\10\1\0\1\1\2\0\12\1"+
    "\24\0\1\10\5\0\2\10\1\0\1\40\5\10\1\0"+
    "\10\10\1\0\10\10\1\0\1\5\2\0\12\5\24\0"+
    "\1\10\2\0\1\41\2\0\1\22\1\0\1\42\2\22"+
    "\2\0\2\5\4\0\1\22\1\35\1\0\1\43\1\0"+
    "\1\35\1\0\4\35\1\44\27\0\7\10\1\0\3\10"+
    "\1\0\5\10\1\0\1\10\1\0\6\10\2\1\4\0"+
    "\1\1\1\0\15\1\35\0\2\10\5\0\17\10\1\0"+
    "\1\10\1\0\6\10\2\5\3\0\1\5\1\0\15\5"+
    "\34\0\2\10\2\0\2\41\2\0\2\22\1\0\2\22"+
    "\1\35\1\0\1\35\1\0\4\35\25\0\10\10\1\0"+
    "\2\10\1\24\2\45\1\0\2\10\1\0\2\10\1\46"+
    "\1\0\5\10\2\0\16\1\4\0\1\5\16\0\1\5"+
    "\13\0\1\10\5\0\12\10\1\24\1\45\2\10\1\0"+
    "\2\10\1\47\1\0\5\10\2\0\16\5\34\0\1\10"+
    "\3\0\3\22\1\35\1\0\2\35\1\0\4\35\15\0"+
    "\5\10\2\46\1\10\2\0\4\10\1\0\7\10\5\1"+
    "\1\45\5\1\5\0\1\45\11\0\1\45\6\0\5\10"+
    "\2\47\1\10\1\0\4\10\1\0\7\10\5\5\1\45"+
    "\5\5\5\0\1\45\11\0\1\45\5\0\1\41\1\22"+
    "\1\35\1\0\2\35\1\0\4\35\10\0\1\50\4\0"+
    "\1\10\1\0\3\10\1\0\3\10\1\0\2\10\1\50"+
    "\4\10\3\1\1\46\4\1\3\0\1\46\7\0\1\46"+
    "\6\0\1\10\1\0\6\10\1\0\2\10\1\50\4\10"+
    "\3\5\1\47\3\5\3\0\1\47\6\0\1\47\4\0"+
    "\1\35\1\0\2\35\1\0\1\35\1\50\2\35\5\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\0\2\10\1\0"+
    "\2\10\4\1\10\0\1\10\1\0\3\10\1\0\2\10"+
    "\1\0\2\10\4\5\10\0\1\35\1\51\1\35\1\0"+
    "\2\35\4\0\3\10\4\1\11\0\3\10\4\5\13\0"+
    "\2\35\2\0\2\10\1\1\3\0\2\10\1\5\3\0"+
    "\2\52\1\0\1\10\1\1\2\0\1\10\1\5\2\0"+
    "\1\53\1\0\2\10\1\0\2\10\1\0\2\10\1\0"+
    "\2\10";

  private static int [] zzUnpackAction() {
    int [] result = new int[1075];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\60\0\140\0\220\0\300\0\360\0\u0120\0\u0150"+
    "\0\u0180\0\u01b0\0\u01e0\0\u0210\0\u0240\0\u0270\0\u02a0\0\u02d0"+
    "\0\u02d0\0\u02d0\0\u0300\0\u0330\0\u0360\0\u0390\0\u03c0\0\u03f0"+
    "\0\u0420\0\u0450\0\u0480\0\u04b0\0\u02d0\0\u02d0\0\u04e0\0\u02d0"+
    "\0\u0510\0\u0540\0\u0540\0\u0540\0\u0570\0\u05a0\0\u05d0\0\u0600"+
    "\0\u0630\0\u0660\0\u0690\0\u06c0\0\u06f0\0\u0720\0\u0750\0\u0780"+
    "\0\u07b0\0\u07e0\0\u0810\0\u0840\0\u0870\0\u08a0\0\u08d0\0\u0900"+
    "\0\u0930\0\u0960\0\u0990\0\u0540\0\u09c0\0\u09f0\0\u09c0\0\u0a20"+
    "\0\u0a50\0\u0a80\0\u0ab0\0\u0ae0\0\u0b10\0\u0b40\0\u0b70\0\u0ba0"+
    "\0\u0bd0\0\u0c00\0\u0c30\0\u0c60\0\u0c90\0\u0cc0\0\u0cf0\0\u0d20"+
    "\0\u0d50\0\u0d80\0\u0db0\0\u0de0\0\u0e10\0\u0cc0\0\u0e40\0\u09c0"+
    "\0\u02d0\0\u0e70\0\u0ea0\0\u02d0\0\u02d0\0\u0ed0\0\u0f00\0\u0f30"+
    "\0\u0f60\0\u0f60\0\u0f90\0\u0fc0\0\u0ff0\0\u1020\0\u1050\0\u0f60"+
    "\0\u02d0\0\u1080\0\u0d50\0\u10b0\0\u10e0\0\u1110\0\u1140\0\u1050"+
    "\0\u1170\0\u0f60\0\u0f00\0\u0f30\0\u02d0\0\u11a0\0\u02d0\0\u02d0"+
    "\0\u0e70\0\u0e70\0\u11d0\0\u02d0\0\u1200\0\u1230\0\u1260\0\u1290"+
    "\0\u12c0\0\u12f0\0\u1320\0\u0450\0\u1350\0\u1380\0\u13b0\0\u0d50"+
    "\0\u13e0\0\u1410\0\u1440\0\u1470\0\u14a0\0\u14d0\0\u1500\0\u1530"+
    "\0\u1560\0\u1590\0\u15c0\0\u15f0\0\u04e0\0\u1620\0\u1650\0\u1680"+
    "\0\u16b0\0\u16e0\0\u1710\0\u1740\0\u1770\0\u17a0\0\u17d0\0\u1800"+
    "\0\u1830\0\u02d0\0\u1860\0\u1890\0\u18c0\0\u18f0\0\u1920\0\u1950"+
    "\0\u1980\0\u19b0\0\u19e0\0\u1a10\0\u1a40\0\u1a70\0\u1aa0\0\u1ad0"+
    "\0\u1b00\0\u1b30\0\u1b60\0\u1b90\0\u1bc0\0\u1bf0\0\u02d0\0\u1c20"+
    "\0\u1c50\0\u1c80\0\u1cb0\0\u1ce0\0\u08a0\0\u1d10\0\u1d40\0\u1d70"+
    "\0\u1da0\0\u1dd0\0\u1e00\0\u1e30\0\u1e60\0\u1e90\0\u1ec0\0\u1ef0"+
    "\0\u1f20\0\u1f50\0\u1f80\0\u1fb0\0\u1fe0\0\u2010\0\u2040\0\u2070"+
    "\0\u20a0\0\u20d0\0\u2100\0\u2130\0\u2160\0\u2190\0\u21c0\0\u21f0"+
    "\0\u2220\0\u2250\0\u2280\0\u22b0\0\u22e0\0\u2310\0\u2340\0\u2370"+
    "\0\u23a0\0\u23d0\0\u2400\0\u2430\0\u2460\0\u2490\0\u24c0\0\u02d0"+
    "\0\u24f0\0\u2520\0\u2550\0\u2580\0\u25b0\0\u25e0\0\u2610\0\u2640"+
    "\0\u2670\0\u26a0\0\u26d0\0\u2700\0\u2730\0\u2760\0\u2790\0\u27c0"+
    "\0\u27f0\0\u2820\0\u2850\0\u2880\0\u28b0\0\u28e0\0\u2910\0\u0d50"+
    "\0\u2940\0\u2970\0\u29a0\0\u29d0\0\u2a00\0\u2a30\0\u2a60\0\u2a90"+
    "\0\u2ac0\0\u2af0\0\u2b20\0\u2b50\0\u2b80\0\u0f00\0\u2bb0\0\u2be0"+
    "\0\u2c10\0\u2c40\0\u2c70\0\u2ca0\0\u2cd0\0\u2d00\0\u2d30\0\u0f30"+
    "\0\u2d60\0\u2d90\0\u2dc0\0\u2df0\0\u2e20\0\u2e50\0\u2e80\0\u2eb0"+
    "\0\u2ee0\0\u2f10\0\u2f40\0\u0ed0\0\u2f70\0\u2fa0\0\u2fd0\0\u3000"+
    "\0\u3030\0\u02d0\0\u3060\0\u3090\0\u30c0\0\u30f0\0\u3120\0\u3150"+
    "\0\u3180\0\u31b0\0\u31e0\0\u3210\0\u3240\0\u3270\0\u32a0\0\u02d0"+
    "\0\u32d0\0\u3300\0\u3330\0\u3360\0\u3390\0\u33c0\0\u33f0\0\u02d0"+
    "\0\u3420\0\u3450\0\u3480\0\u34b0\0\u34e0\0\u3510\0\u3540\0\u3570"+
    "\0\u35a0\0\u35d0\0\u3600\0\u3630\0\u3660\0\u3690\0\u36c0\0\u36f0"+
    "\0\u3720\0\u3750\0\u3780\0\u37b0\0\u37e0\0\u3810\0\u3840\0\u3870"+
    "\0\u38a0\0\u38d0\0\u3900\0\u3930\0\u3960\0\u3990\0\u39c0\0\u39f0"+
    "\0\u3a20\0\u3a50\0\u3a80\0\u3ab0\0\u3ae0\0\u3b10\0\u3b40\0\u3b70"+
    "\0\u3ba0\0\u3bd0\0\u3c00\0\u3c30\0\u3c60\0\u3c90\0\u3cc0\0\u3cf0"+
    "\0\u3d20\0\u3d50\0\u3d80\0\u3db0\0\u3de0\0\u3e10\0\u3e40\0\u3e70"+
    "\0\u3ea0\0\u3ed0\0\u3f00\0\u3f30\0\u3f60\0\u3f90\0\u3fc0\0\u3ff0"+
    "\0\u4020\0\u4050\0\u4080\0\u40b0\0\u40e0\0\u4110\0\u4140\0\u4170"+
    "\0\u41a0\0\u41d0\0\u4200\0\u4230\0\u4260\0\u4290\0\u42c0\0\u42f0"+
    "\0\u4320\0\u4350\0\u4380\0\u43b0\0\u43e0\0\u4410\0\u4440\0\u4470"+
    "\0\u44a0\0\u44d0\0\u4500\0\u4530\0\u4560\0\u4590\0\u45c0\0\u45f0"+
    "\0\u4620\0\u4650\0\u4680\0\u46b0\0\u46e0\0\u4710\0\u4740\0\u4770"+
    "\0\u47a0\0\u47d0\0\u4800\0\u4830\0\u4860\0\u4890\0\u48c0\0\u48f0"+
    "\0\u4920\0\u4950\0\u4980\0\u49b0\0\u49e0\0\u4a10\0\u4a40\0\u4a70"+
    "\0\u4aa0\0\u4ad0\0\u4b00\0\u4b30\0\u4b60\0\u4b90\0\u4bc0\0\u4bf0"+
    "\0\u4c20\0\u4c50\0\u4c80\0\u4cb0\0\u4ce0\0\u4d10\0\u4d40\0\u4d70"+
    "\0\u4da0\0\u4dd0\0\u4e00\0\u4e30\0\u4e60\0\u4e90\0\u4ec0\0\u4ef0"+
    "\0\u4f20\0\u4f50\0\u4f80\0\u4fb0\0\u4fe0\0\u5010\0\u5040\0\u5070"+
    "\0\u50a0\0\u50d0\0\u5100\0\u5130\0\u5160\0\u5190\0\u51c0\0\u51f0"+
    "\0\u5220\0\u5250\0\u5280\0\u52b0\0\u52e0\0\u5310\0\u5340\0\u5370"+
    "\0\u53a0\0\u53d0\0\u5400\0\u5430\0\u5460\0\u5490\0\u54c0\0\u54f0"+
    "\0\u5520\0\u5550\0\u5580\0\u55b0\0\u55e0\0\u5610\0\u5640\0\u5670"+
    "\0\u56a0\0\u56d0\0\u5700\0\u5730\0\u5760\0\u5790\0\u57c0\0\u57f0"+
    "\0\u5820\0\u5850\0\u5880\0\u58b0\0\u58e0\0\u5910\0\u5940\0\u5970"+
    "\0\u59a0\0\u59d0\0\u5a00\0\u5a30\0\u5a60\0\u5a90\0\u5ac0\0\u5af0"+
    "\0\u5b20\0\u5b50\0\u5b80\0\u5bb0\0\u5be0\0\u5c10\0\u5c40\0\u5c70"+
    "\0\u5ca0\0\u5cd0\0\u5d00\0\u5d30\0\u5d60\0\u5d90\0\u5dc0\0\u5df0"+
    "\0\u5e20\0\u5e50\0\u5e80\0\u5eb0\0\u5ee0\0\u5f10\0\u5f40\0\u05a0"+
    "\0\u02d0\0\u1830\0\u5f70\0\u5fa0\0\u5fd0\0\u6000\0\u6030\0\u6060"+
    "\0\u05a0\0\u6090\0\u60c0\0\u60f0\0\u6120\0\u6150\0\u6180\0\u61b0"+
    "\0\u61e0\0\u6210\0\u6240\0\u6270\0\u62a0\0\u62d0\0\u6300\0\u6330"+
    "\0\u6360\0\u6390\0\u63c0\0\u63f0\0\u6420\0\u6450\0\u6480\0\u64b0"+
    "\0\u64e0\0\u6510\0\u6540\0\u1f80\0\u6570\0\u65a0\0\u65d0\0\u6600"+
    "\0\u6630\0\u6660\0\u6690\0\u66c0\0\u66f0\0\u6720\0\u6750\0\u6780"+
    "\0\u67b0\0\u67e0\0\u2160\0\u6810\0\u6840\0\u6870\0\u68a0\0\u68d0"+
    "\0\u6900\0\u6930\0\u6960\0\u6990\0\u69c0\0\u69f0\0\u6a20\0\u6a50"+
    "\0\u6a80\0\u6ab0\0\u6ae0\0\u6b10\0\u6b40\0\u6b70\0\u6ba0\0\u6bd0"+
    "\0\u6c00\0\u6c30\0\u6c60\0\u6c90\0\u6cc0\0\u6cf0\0\u0a50\0\u24c0"+
    "\0\u6d20\0\u6d50\0\u6d80\0\u6db0\0\u6de0\0\u0a50\0\u6e10\0\u6e40"+
    "\0\u6e70\0\u6ea0\0\u6ed0\0\u6f00\0\u6f30\0\u6f60\0\u6f90\0\u6fc0"+
    "\0\u6ff0\0\u7020\0\u7050\0\u7080\0\u70b0\0\u70e0\0\u7110\0\u7140"+
    "\0\u7170\0\u71a0\0\u71d0\0\u7200\0\u7230\0\u7260\0\u7290\0\u72c0"+
    "\0\u72f0\0\u7320\0\u7350\0\u7380\0\u73b0\0\u73e0\0\u7410\0\u7440"+
    "\0\u7470\0\u74a0\0\u74d0\0\u7500\0\u7530\0\u7560\0\u7590\0\u75c0"+
    "\0\u75f0\0\u7620\0\u7650\0\u7680\0\u76b0\0\u76e0\0\u7710\0\u7740"+
    "\0\u7770\0\u77a0\0\u77d0\0\u7800\0\u7830\0\u7860\0\u7890\0\u78c0"+
    "\0\u78f0\0\u7920\0\u7950\0\u7980\0\u79b0\0\u79e0\0\u7a10\0\u7a40"+
    "\0\u7a70\0\u7aa0\0\u7ad0\0\u7b00\0\u7b30\0\u7b60\0\u7b90\0\u7bc0"+
    "\0\u7bf0\0\u7c20\0\u7c50\0\u7c80\0\u7cb0\0\u7ce0\0\u7d10\0\u7d40"+
    "\0\u7d70\0\u7da0\0\u02d0\0\u1830\0\u7dd0\0\u7e00\0\u7e30\0\u7e60"+
    "\0\u7e90\0\u7ec0\0\u7ef0\0\u7f20\0\u7f50\0\u7f80\0\u7fb0\0\u7fe0"+
    "\0\u8010\0\u8040\0\u8070\0\u80a0\0\u80d0\0\u8100\0\u8130\0\u8160"+
    "\0\u3ea0\0\u8190\0\u81c0\0\u81f0\0\u8220\0\u8250\0\u8280\0\u82b0"+
    "\0\u82e0\0\u8310\0\u8340\0\u1f80\0\u8370\0\u83a0\0\u83d0\0\u8400"+
    "\0\u8430\0\u8460\0\u8490\0\u84c0\0\u84f0\0\u2160\0\u8520\0\u8550"+
    "\0\u8580\0\u85b0\0\u85e0\0\u8610\0\u8640\0\u8670\0\u86a0\0\u86d0"+
    "\0\u8700\0\u02d0\0\u24c0\0\u8730\0\u8760\0\u8790\0\u87c0\0\u87f0"+
    "\0\u8820\0\u8850\0\u8880\0\u88b0\0\u88e0\0\u8910\0\u8940\0\u8970"+
    "\0\u89a0\0\u89d0\0\u8a00\0\u8a30\0\u8a60\0\u8a90\0\u4da0\0\u8ac0"+
    "\0\u8af0\0\u8b20\0\u8b50\0\u8b80\0\u8bb0\0\u8be0\0\u8c10\0\u8c40"+
    "\0\u8c70\0\u0f00\0\u8ca0\0\u8cd0\0\u8d00\0\u8d30\0\u8d60\0\u8d90"+
    "\0\u8dc0\0\u8df0\0\u8e20\0\u0f30\0\u8e50\0\u8e80\0\u8eb0\0\u8ee0"+
    "\0\u8f10\0\u8f40\0\u8f70\0\u8fa0\0\u8fd0\0\u9000\0\u9030\0\u9060"+
    "\0\u9090\0\u90c0\0\u90f0\0\u9120\0\u9150\0\u9180\0\u91b0\0\u91e0"+
    "\0\u9210\0\u9240\0\u9270\0\u92a0\0\u02d0\0\u92d0\0\u9300\0\u9330"+
    "\0\u9360\0\u9390\0\u93c0\0\u93f0\0\u9420\0\u9450\0\u9480\0\u94b0"+
    "\0\u94e0\0\u9510\0\u9540\0\u9570\0\u95a0\0\u05a0\0\u95d0\0\u9600"+
    "\0\u9630\0\u9660\0\u9690\0\u96c0\0\u96f0\0\u3ea0\0\u9720\0\u9750"+
    "\0\u9780\0\u97b0\0\u97e0\0\u9810\0\u9840\0\u1f80\0\u9870\0\u98a0"+
    "\0\u98d0\0\u9900\0\u9930\0\u9960\0\u9990\0\u2160\0\u99c0\0\u99f0"+
    "\0\u9a20\0\u9a50\0\u9a80\0\u9ab0\0\u9ae0\0\u9b10\0\u9b40\0\u9b70"+
    "\0\u9ba0\0\u9bd0\0\u9c00\0\u9c30\0\u9c60\0\u9c90\0\u9cc0\0\u0a50"+
    "\0\u9cf0\0\u9d20\0\u9d50\0\u9d80\0\u9db0\0\u9de0\0\u9e10\0\u4da0"+
    "\0\u9e40\0\u9e70\0\u9ea0\0\u9ed0\0\u9f00\0\u9f30\0\u0f00\0\u9f60"+
    "\0\u9f90\0\u9fc0\0\u9ff0\0\ua020\0\ua050\0\u0f30\0\ua080\0\ua0b0"+
    "\0\ua0e0\0\ua110\0\ua140\0\ua170\0\ua1a0\0\ua1d0\0\ua200\0\ua230"+
    "\0\u1290\0\ua260\0\ua290\0\ua2c0\0\ua2f0\0\ua320\0\ua350\0\ua380"+
    "\0\ua3b0\0\ua3e0\0\ua410\0\ua440\0\ua470\0\ua4a0\0\ua4d0\0\ua500"+
    "\0\ua530\0\ua560\0\ua590\0\ua5c0\0\ua5f0\0\ua620\0\ua650\0\ua680"+
    "\0\ua6b0\0\ua6e0\0\ua710\0\ua740\0\ua770\0\ua7a0\0\ua7d0\0\ua800"+
    "\0\ua830\0\ua860\0\ua890\0\ua8c0\0\ua8f0\0\ua920\0\ua950\0\ua980"+
    "\0\ua9b0\0\ua9e0\0\uaa10\0\uaa40\0\uaa70\0\uaaa0\0\uaad0\0\uab00"+
    "\0\uab30\0\uab60\0\uab90\0\uabc0\0\uabf0\0\uac20\0\uac50\0\uac80"+
    "\0\uacb0\0\uace0\0\uad10\0\uad40\0\uad70\0\uada0\0\uadd0\0\uae00"+
    "\0\uae30\0\uae60\0\uae90\0\uaec0\0\uaef0\0\uaf20\0\uaf50\0\uaf80"+
    "\0\uafb0\0\uafe0\0\ub010\0\ub040\0\ub070\0\ub0a0\0\ub0d0\0\ub100"+
    "\0\ub130\0\ub160\0\ub190\0\ub1c0\0\ub1f0\0\ub220\0\ub250\0\ub280"+
    "\0\ub2b0\0\ub2e0\0\ub310\0\ub340\0\ub370\0\ub3a0\0\ub3d0\0\ub400"+
    "\0\ub430\0\uacb0\0\ub460\0\ub490\0\ub4c0\0\ub4f0\0\ub520\0\ub550"+
    "\0\ub580\0\ub5b0\0\ub5e0\0\ub610\0\ub640\0\ub670\0\ub6a0\0\ub6d0"+
    "\0\ub700\0\ub730\0\ub760\0\u02d0\0\u1290\0\ub790\0\ub7c0\0\ub7f0"+
    "\0\ub820\0\ub850\0\ub880\0\ub8b0\0\ub8e0\0\ub910\0\u02d0\0\ub940"+
    "\0\ub970\0\ub9a0\0\ub9d0\0\uba00\0\uba30\0\uba60\0\uba90\0\ubac0"+
    "\0\ubaf0\0\ubb20\0\ubb50";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1075];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\20\1\21\1\22\1\23\2\20\1\24\1\25\1\26"+
    "\1\20\1\27\1\30\1\20\1\31\1\32\3\20\1\33"+
    "\1\34\10\20\1\26\1\32\16\20\2\35\2\20\1\36"+
    "\1\21\1\22\51\36\2\35\3\36\1\37\1\40\5\41"+
    "\1\36\5\41\1\36\5\41\1\36\2\41\1\36\1\41"+
    "\3\36\5\41\12\36\1\41\2\35\2\36\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\46"+
    "\1\53\1\54\1\55\1\56\1\57\1\46\1\60\1\46"+
    "\1\61\1\62\1\63\2\46\1\42\1\46\2\42\1\20"+
    "\1\64\1\65\3\46\1\66\1\67\2\42\1\70\1\42"+
    "\1\71\1\72\1\42\1\63\1\73\2\74\2\42\1\75"+
    "\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105"+
    "\1\101\1\106\1\107\1\110\1\111\1\112\1\101\1\113"+
    "\1\101\1\114\1\115\1\116\2\101\1\75\1\101\2\75"+
    "\1\22\1\117\1\120\3\101\1\121\1\122\2\75\1\123"+
    "\1\75\1\124\1\125\1\75\1\126\1\127\2\130\2\75"+
    "\1\131\1\37\1\132\5\133\1\131\5\133\1\131\5\133"+
    "\1\134\2\133\1\36\1\133\1\135\2\131\5\133\1\136"+
    "\4\131\1\36\1\137\1\140\2\131\1\133\1\36\1\35"+
    "\2\131\1\141\1\37\1\142\1\143\4\144\1\145\3\144"+
    "\1\146\1\144\1\141\5\144\1\147\2\144\1\150\1\144"+
    "\2\141\1\151\1\152\4\144\1\153\1\154\2\141\1\155"+
    "\1\150\1\156\1\157\1\141\1\160\1\161\1\150\1\162"+
    "\2\141\1\36\1\37\1\22\44\36\1\163\1\164\3\36"+
    "\2\35\1\36\1\165\1\36\1\37\1\36\5\166\1\36"+
    "\5\166\1\36\5\166\1\36\2\166\1\36\1\166\1\167"+
    "\1\170\1\36\5\166\6\36\1\163\1\164\2\36\1\166"+
    "\5\36\1\37\1\171\52\36\1\35\3\36\1\37\1\172"+
    "\5\173\1\36\5\173\1\36\5\173\1\36\2\173\1\36"+
    "\1\173\3\36\5\173\6\36\1\163\1\164\2\36\1\173"+
    "\1\36\1\35\3\36\1\37\27\36\1\167\1\174\14\36"+
    "\1\163\1\164\10\36\1\37\1\171\5\175\1\36\5\175"+
    "\1\36\5\175\1\36\2\175\1\36\1\175\3\36\5\175"+
    "\12\36\1\175\1\36\1\35\3\36\1\37\1\36\5\176"+
    "\1\36\5\176\1\36\5\176\1\36\2\176\1\36\1\176"+
    "\1\167\1\170\1\36\5\176\6\36\1\163\1\164\2\36"+
    "\1\176\5\36\1\21\1\171\1\177\4\200\1\201\1\200"+
    "\1\202\2\200\1\203\1\204\3\200\1\205\1\200\1\134"+
    "\2\200\1\36\1\200\3\36\1\206\1\207\3\200\1\210"+
    "\5\36\1\163\1\164\2\36\1\200\2\35\1\211\1\36"+
    "\64\0\1\212\64\0\1\213\13\0\1\214\62\0\1\215"+
    "\34\0\1\216\65\0\1\217\60\0\1\220\54\0\1\221"+
    "\52\0\1\222\64\0\1\223\57\0\1\224\46\0\2\225"+
    "\1\0\55\225\3\0\5\41\1\0\5\41\1\0\5\41"+
    "\1\0\2\41\1\0\1\41\2\0\7\41\11\0\1\41"+
    "\7\0\1\226\1\0\1\227\1\230\1\0\1\231\2\0"+
    "\1\232\1\233\1\0\1\234\1\0\1\235\13\0\1\231"+
    "\1\234\15\0\1\236\7\0\1\46\1\237\3\46\1\0"+
    "\1\240\4\46\1\0\5\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\5\46\1\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\243\2\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\1\244\4\46\1\0\2\46\1\245\2\46\1\0"+
    "\1\246\1\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\6\0\5\46\1\0\5\46"+
    "\1\0\5\46\1\0\2\46\1\241\1\247\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\1\250"+
    "\1\0\1\251\1\230\1\0\1\231\2\0\1\232\1\233"+
    "\1\0\1\234\1\0\1\235\1\0\1\252\11\0\1\231"+
    "\1\234\15\0\1\236\7\0\5\46\1\0\2\46\1\253"+
    "\2\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\3\46\1\254\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\2\46\1\255\2\46\1\0"+
    "\5\46\1\0\4\46\1\256\1\0\1\46\1\257\1\241"+
    "\1\46\1\242\1\0\4\46\1\260\2\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\1\261\4\46"+
    "\1\0\2\46\1\262\2\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\1\226\1\222\1\227\1\230\1\0\1\231\2\0"+
    "\1\232\1\233\1\0\1\234\1\0\1\235\1\263\12\0"+
    "\1\231\1\234\15\0\1\236\7\0\5\46\1\0\1\264"+
    "\4\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\1\265\4\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\1\266\4\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\1\226\1\0"+
    "\1\227\1\230\1\0\1\231\2\0\1\232\1\233\1\0"+
    "\1\234\1\0\1\235\3\0\1\267\7\0\1\231\1\234"+
    "\15\0\1\236\7\0\1\270\1\46\1\271\2\46\1\0"+
    "\5\46\1\0\3\46\1\272\1\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\1\46\1\273\3\46\1\0\5\46\1\0"+
    "\2\46\1\274\2\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\44\0"+
    "\1\275\1\276\20\0\1\226\1\0\1\277\1\230\1\0"+
    "\1\231\2\0\1\232\1\300\1\0\1\234\1\0\1\235"+
    "\13\0\1\231\1\234\15\0\1\236\7\0\1\301\1\302"+
    "\1\303\1\304\1\302\1\231\2\302\1\305\1\306\1\302"+
    "\1\234\1\302\1\307\3\302\1\0\2\302\1\0\1\302"+
    "\3\0\1\310\1\311\3\302\12\0\1\312\4\0\3\313"+
    "\1\314\1\313\1\315\1\316\1\313\1\317\2\313\1\320"+
    "\1\321\1\313\1\322\1\313\1\323\13\313\1\317\1\322"+
    "\11\313\1\20\3\313\1\324\4\313\3\325\1\326\1\325"+
    "\1\327\1\330\1\325\1\331\2\325\1\332\1\333\1\325"+
    "\1\334\1\325\1\335\13\325\1\331\1\334\12\325\1\20"+
    "\2\325\1\336\4\325\3\0\5\46\1\0\5\46\1\0"+
    "\5\46\1\0\1\337\1\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\1\226"+
    "\1\0\1\340\1\341\1\0\1\231\2\0\1\342\1\343"+
    "\1\0\1\344\1\0\1\235\13\0\1\231\1\344\15\0"+
    "\1\236\4\0\2\76\1\0\55\76\3\0\1\101\1\345"+
    "\3\101\1\0\1\346\4\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\351\2\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\1\352\4\101\1\0\2\101\1\353"+
    "\2\101\1\0\1\354\1\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\5\101\1\0\5\101\1\0\2\101\1\347\1\355"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\1\250\1\0\1\356\1\341\1\0\1\231\2\0"+
    "\1\342\1\343\1\0\1\344\1\0\1\235\1\0\1\252"+
    "\11\0\1\231\1\344\15\0\1\236\7\0\5\101\1\0"+
    "\2\101\1\357\2\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\3\101\1\360\1\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\2\101\1\361"+
    "\2\101\1\0\5\101\1\0\4\101\1\362\1\0\1\101"+
    "\1\363\1\347\1\101\1\350\1\0\4\101\1\364\2\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\1\365\4\101\1\0\2\101\1\366\2\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\1\226\1\222\1\340\1\341\1\0"+
    "\1\231\2\0\1\342\1\343\1\0\1\344\1\0\1\235"+
    "\1\367\12\0\1\231\1\344\15\0\1\236\7\0\5\101"+
    "\1\0\1\370\4\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\1\371\4\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\1\372"+
    "\4\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\1\226\1\0\1\340\1\341\1\0\1\231\2\0\1\342"+
    "\1\343\1\0\1\344\1\0\1\235\3\0\1\267\7\0"+
    "\1\231\1\344\15\0\1\236\7\0\1\373\1\101\1\374"+
    "\2\101\1\0\5\101\1\0\3\101\1\375\1\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\1\101\1\376\3\101\1\0"+
    "\5\101\1\0\2\101\1\377\2\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\44\0\1\u0100\1\u0101\20\0\1\226\1\0\1\u0102"+
    "\1\341\1\0\1\231\2\0\1\342\1\u0103\1\0\1\344"+
    "\1\0\1\235\13\0\1\231\1\344\15\0\1\236\7\0"+
    "\1\u0104\1\u0105\1\u0106\1\u0107\1\u0105\1\231\2\u0105\1\u0108"+
    "\1\u0109\1\u0105\1\344\1\u0105\1\u010a\3\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\3\0\1\u010b\1\u010c\3\u0105\12\0\1\u010d"+
    "\4\0\3\u010e\1\u010f\1\u010e\1\u0110\1\u0111\1\u010e\1\u0112"+
    "\2\u010e\1\u0113\1\u0114\1\u010e\1\u0115\1\u010e\1\u0116\13\u010e"+
    "\1\u0112\1\u0115\11\u010e\1\36\3\u010e\1\u0117\4\u010e\3\u0118"+
    "\1\u0119\1\u0118\1\u011a\1\u011b\1\u0118\1\u011c\2\u0118\1\u011d"+
    "\1\u011e\1\u0118\1\u011f\1\u0118\1\u0120\13\u0118\1\u011c\1\u011f"+
    "\12\u0118\1\36\2\u0118\1\u0121\4\u0118\3\0\5\101\1\0"+
    "\5\101\1\0\5\101\1\0\1\u0122\1\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\32\0\1\u0123\33\0\5\133\1\0\5\133\1\0\5\133"+
    "\1\0\2\133\1\0\1\133\2\0\7\133\11\0\1\133"+
    "\45\0\1\u0124\1\u0125\15\0\47\u010e\1\36\10\u010e\50\u0118"+
    "\1\36\7\u0118\3\0\1\226\4\0\1\u0126\3\0\1\u0127"+
    "\17\0\1\u0126\16\0\1\236\7\0\5\144\1\0\1\u0128"+
    "\4\144\1\0\5\144\1\0\2\144\1\u0129\1\144\1\u012a"+
    "\1\0\7\144\4\0\1\u0129\4\0\1\144\1\u0129\6\0"+
    "\5\144\1\0\5\144\1\0\5\144\1\0\2\144\1\u0129"+
    "\1\144\1\u012a\1\0\7\144\4\0\1\u0129\4\0\1\144"+
    "\1\u0129\6\0\1\250\4\0\1\u0126\3\0\1\u0127\17\0"+
    "\1\u0126\16\0\1\236\7\0\5\144\1\0\5\144\1\0"+
    "\4\144\1\u012b\1\0\2\144\1\u0129\1\144\1\u012a\1\0"+
    "\7\144\4\0\1\u0129\4\0\1\144\1\u0129\6\0\1\226"+
    "\4\0\1\u0126\3\0\1\u0127\7\0\1\36\7\0\1\u0126"+
    "\16\0\1\236\7\0\1\u012c\4\144\1\0\5\144\1\0"+
    "\5\144\1\0\2\144\1\u0129\1\144\1\u012a\1\0\7\144"+
    "\4\0\1\u0129\4\0\1\144\1\u0129\6\0\1\226\1\0"+
    "\1\u012d\2\0\1\u0126\3\0\1\u012e\17\0\1\u0126\16\0"+
    "\1\236\7\0\1\u0104\4\u0105\1\u0126\3\u0105\1\u012f\1\u0105"+
    "\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105\3\0\1\u0130"+
    "\4\u0105\12\0\1\u010d\4\0\3\u010e\1\u010f\4\u010e\1\u0131"+
    "\3\u010e\1\u0132\17\u010e\1\u0131\12\u010e\1\36\3\u010e\1\u0117"+
    "\4\u010e\3\u0118\1\u0119\4\u0118\1\u0133\3\u0118\1\u0134\17\u0118"+
    "\1\u0133\13\u0118\1\36\2\u0118\1\u0121\4\u0118\3\0\5\144"+
    "\1\0\5\144\1\0\5\144\1\0\1\u0135\1\144\1\u0129"+
    "\1\144\1\u012a\1\0\7\144\4\0\1\u0129\4\0\1\144"+
    "\1\u0129\6\0\5\166\1\0\5\166\1\0\5\166\1\0"+
    "\2\166\1\0\1\166\2\0\7\166\11\0\1\166\7\0"+
    "\5\173\1\0\5\173\1\0\5\173\1\0\2\173\1\0"+
    "\1\173\2\0\7\173\11\0\1\173\7\0\5\175\1\0"+
    "\5\175\1\0\5\175\1\0\2\175\1\0\1\175\2\0"+
    "\7\175\11\0\1\175\7\0\5\176\1\0\5\176\1\0"+
    "\5\176\1\0\2\176\1\0\1\176\2\0\7\176\11\0"+
    "\1\176\7\0\1\200\1\u0136\3\200\1\0\5\200\1\0"+
    "\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200"+
    "\11\0\1\200\7\0\5\200\1\0\5\200\1\0\5\200"+
    "\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200\11\0"+
    "\1\200\11\0\1\u0139\55\0\5\200\1\0\2\200\1\u013a"+
    "\2\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\7\0\5\200\1\u013b\5\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\1\200\1\u013c\5\200\11\0\1\200\7\0\5\200\1\0"+
    "\1\u013d\4\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\7\0\2\200\1\u013e"+
    "\2\200\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\7\0\1\200"+
    "\1\u013f\3\200\1\0\5\200\1\0\5\200\1\0\2\200"+
    "\1\u0137\1\200\1\u0138\1\0\7\200\11\0\1\200\62\0"+
    "\1\u0140\6\0\1\u0141\74\0\1\u0142\56\0\1\u0143\50\0"+
    "\1\u0144\54\0\1\u0145\61\0\1\u0146\67\0\1\u0147\42\0"+
    "\1\u0148\72\0\1\u0149\55\0\1\u014a\62\0\1\u014b\50\0"+
    "\1\u014c\67\0\1\u014d\47\0\1\u014e\7\0\1\u014f\41\0"+
    "\1\u0150\16\0\1\252\51\0\1\u0151\50\0\1\u0152\15\0"+
    "\1\u0153\2\0\1\u0154\10\0\1\u0155\41\0\1\263\47\0"+
    "\1\u0156\73\0\1\u0157\35\0\2\46\1\u0158\2\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\2\46\1\u0159\2\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\32\0\1\241\1\0\1\242\14\0"+
    "\1\241\5\0\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\3\46\1\u015a\1\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\5\46\1\0\3\46\1\u015b\1\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\4\46\1\u015c\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\5\46\1\0\2\46\1\u015d\2\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\1\46\1\u015e\3\46"+
    "\1\0\5\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\14\0\1\u014c"+
    "\15\0\1\u0150\1\0\1\36\14\0\1\u0150\5\0\1\u0150"+
    "\12\0\1\u0145\11\0\1\u014d\50\0\1\u015f\50\0\5\46"+
    "\1\0\1\u0160\4\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\5\46\1\0\2\46\1\u0161"+
    "\2\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\46\1\0"+
    "\4\46\1\u0162\1\0\5\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\5\46\1\0\5\46\1\u0163\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\2\46\1\u0164\4\46\4\0"+
    "\1\241\4\0\1\46\1\241\6\0\4\46\1\u0165\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\1\46\1\u0166\3\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\1\46\1\u0167\3\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\4\46\1\u0168\1\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\41\0\1\u0169\24\0\4\46\1\u016a\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\u016b\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\4\46\1\u016c\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\5\46\1\0\1\46"+
    "\1\u016d\3\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\5\46\1\0\5\46\1\0\2\46\1\u0150\1\46"+
    "\1\36\1\0\7\46\4\0\1\u0150\4\0\1\46\1\u0150"+
    "\6\0\4\46\1\u016e\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\1\46\1\u016f"+
    "\3\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\5\46\1\0\1\u0170\4\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\5\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\3\46\1\u0171"+
    "\3\46\4\0\1\241\4\0\1\46\1\241\6\0\5\u0172"+
    "\1\0\3\u0172\2\u0173\1\0\5\u0172\1\0\2\u0172\1\0"+
    "\1\u0172\2\0\1\u0174\5\u0172\1\u0175\11\0\1\u0172\20\0"+
    "\1\u0176\4\0\1\u014d\43\0\1\u0152\15\0\1\u0153\2\0"+
    "\1\u0154\10\0\1\u0177\23\0\5\302\1\0\1\u0178\4\302"+
    "\1\0\5\302\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0\5\302"+
    "\1\0\5\302\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0\5\302"+
    "\1\0\2\302\1\u017a\2\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302"+
    "\1\0\1\u017b\4\302\1\0\2\302\1\u017c\2\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\3\302\1\u017d\1\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\2\302\1\u017e\2\302\1\0"+
    "\5\302\1\0\4\302\1\u017f\1\0\1\302\1\u0180\1\0"+
    "\1\302\2\0\4\302\1\u0181\2\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\1\u0182\4\302\1\0\5\302"+
    "\1\0\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\7\0\1\u0183\4\302\1\0\5\302\1\0"+
    "\3\302\1\u0184\1\302\1\0\2\302\1\0\1\302\2\0"+
    "\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0"+
    "\5\302\1\0\2\302\1\u0185\2\302\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\5\302\1\0\5\302\1\0\5\302\1\0\1\u0186\1\302"+
    "\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302"+
    "\4\0\47\313\1\20\21\313\1\u0187\35\313\1\20\31\313"+
    "\1\u0188\25\313\1\20\21\313\1\u0189\7\313\1\u018a\25\313"+
    "\1\20\13\313\1\u018b\16\313\1\u018c\24\313\1\20\24\313"+
    "\1\u018d\32\313\1\20\15\313\1\u018e\15\313\1\u018f\2\313"+
    "\1\u0190\10\313\1\u0191\7\313\1\20\31\313\1\u0192\25\313"+
    "\1\20\21\313\1\u0193\35\313\1\20\35\313\1\u0194\21\313"+
    "\1\20\10\313\50\325\1\20\20\325\1\u0195\36\325\1\20"+
    "\30\325\1\u0196\26\325\1\20\20\325\1\u0197\7\325\1\u0198"+
    "\26\325\1\20\12\325\1\u0199\16\325\1\u019a\25\325\1\20"+
    "\23\325\1\u019b\33\325\1\20\14\325\1\u019c\15\325\1\u019d"+
    "\2\325\1\u019e\10\325\1\u019f\10\325\1\20\30\325\1\u01a0"+
    "\26\325\1\20\20\325\1\u01a1\36\325\1\20\34\325\1\u01a2"+
    "\22\325\1\20\7\325\3\0\5\46\1\u01a3\3\46\1\u01a4"+
    "\1\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\1\46\1\u01a5\5\46\4\0\1\241\4\0\1\46"+
    "\1\241\24\0\1\u01a6\47\0\1\u01a7\7\0\1\u01a8\52\0"+
    "\1\u01a9\50\0\1\u0152\15\0\1\u0153\2\0\1\u0154\10\0"+
    "\1\u01aa\41\0\1\367\41\0\2\101\1\u01ab\2\101\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\2\101\1\u01ac\2\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\32\0\1\347\1\0\1\350\14\0"+
    "\1\347\5\0\1\347\6\0\5\101\1\0\5\101\1\0"+
    "\3\101\1\u01ad\1\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\5\101\1\0\3\101\1\u01ae\1\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\5\101\1\0"+
    "\4\101\1\u01af\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\u01b0\2\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\1\101\1\u01b1\3\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\12\0\1\u0145"+
    "\11\0\1\u01a6\41\0\5\101\1\0\1\u01b2\4\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\u01b3\2\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\4\101\1\u01b4\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\5\101"+
    "\1\u0163\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\2\101\1\u01b5\4\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\4\101\1\u01b6\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\1\101\1\u01b7\3\101\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\1\101\1\u01b8\3\101\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\4\101\1\u01b9\1\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\41\0\1\u01ba"+
    "\24\0\4\101\1\u01bb\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\u01bc\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\4\101\1\u01bd"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\5\101\1\0\1\101\1\u01be\3\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\u0150\1\101\1\36\1\0\7\101\4\0"+
    "\1\u0150\4\0\1\101\1\u0150\6\0\4\101\1\u01bf\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\1\101\1\u01c0\3\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\5\101\1\0"+
    "\1\u01c1\4\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\5\101\1\0\5\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\3\101\1\u01c2\3\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\u01c3\1\0\3\u01c3\2\u01c4\1\0"+
    "\5\u01c3\1\0\2\u01c3\1\0\1\u01c3\2\0\1\u01c5\5\u01c3"+
    "\1\u01c6\11\0\1\u01c3\20\0\1\u0176\4\0\1\u01a6\43\0"+
    "\1\u0152\15\0\1\u0153\2\0\1\u0154\10\0\1\u01c7\23\0"+
    "\5\u0105\1\0\1\u01c8\4\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\5\u0105\1\0\2\u0105\1\u01ca\2\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\5\u0105\1\0\1\u01cb\4\u0105\1\0"+
    "\2\u0105\1\u01cc\2\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\3\u0105\1\u01cd\1\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\2\u0105\1\u01ce\2\u0105\1\0\5\u0105\1\0\4\u0105\1\u01cf"+
    "\1\0\1\u0105\1\u01d0\1\0\1\u0105\2\0\4\u0105\1\u01d1"+
    "\2\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\1\u01d2\4\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\1\u01d3"+
    "\4\u0105\1\0\5\u0105\1\0\3\u0105\1\u01d4\1\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0\2\u0105\1\u01d5"+
    "\2\u0105\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0"+
    "\5\u0105\1\0\1\u01d6\1\u0105\1\0\1\u0105\2\0\7\u0105"+
    "\3\0\1\u01c9\5\0\1\u0105\4\0\11\u010e\1\u01d7\35\u010e"+
    "\1\36\31\u010e\1\u01d8\25\u010e\1\36\21\u010e\1\u01d9\7\u010e"+
    "\1\u01da\25\u010e\1\36\13\u010e\1\u01db\16\u010e\1\u01dc\24\u010e"+
    "\1\36\24\u010e\1\u01dd\32\u010e\1\36\15\u010e\1\u01de\15\u010e"+
    "\1\u01df\2\u010e\1\u01e0\10\u010e\1\u01e1\7\u010e\1\36\31\u010e"+
    "\1\u01e2\25\u010e\1\36\21\u010e\1\u01e3\35\u010e\1\36\35\u010e"+
    "\1\u01e4\21\u010e\1\36\10\u010e\11\u0118\1\u01e5\36\u0118\1\36"+
    "\30\u0118\1\u01e6\26\u0118\1\36\20\u0118\1\u01e7\7\u0118\1\u01e8"+
    "\26\u0118\1\36\12\u0118\1\u01e9\16\u0118\1\u01ea\25\u0118\1\36"+
    "\23\u0118\1\u01eb\33\u0118\1\36\14\u0118\1\u01ec\15\u0118\1\u01ed"+
    "\2\u0118\1\u01ee\10\u0118\1\u01ef\10\u0118\1\36\30\u0118\1\u01f0"+
    "\26\u0118\1\36\20\u0118\1\u01f1\36\u0118\1\36\34\u0118\1\u01f2"+
    "\22\u0118\1\36\7\u0118\3\0\5\101\1\u01a3\3\101\1\u01f3"+
    "\1\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\1\101\1\u01f4\5\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\u01f5\1\0\5\u01f5\1\0\5\u01f5\1\0"+
    "\2\u01f5\1\u01f6\1\u01f5\3\0\5\u01f5\2\36\1\0\1\36"+
    "\4\0\1\36\1\0\1\u01f5\7\0\5\u01f7\1\0\3\u01f7"+
    "\2\u01f8\1\0\5\u01f7\1\0\2\u01f7\1\0\1\u01f7\2\0"+
    "\1\u01f9\5\u01f7\1\u01fa\11\0\1\u01f7\7\0\1\u0150\77\0"+
    "\1\u0153\37\0\5\144\1\0\2\144\1\u01fb\2\144\1\0"+
    "\5\144\1\0\2\144\1\u0129\1\144\1\u012a\1\0\7\144"+
    "\4\0\1\u0129\4\0\1\144\1\u0129\32\0\1\u0129\1\0"+
    "\1\u012a\14\0\1\u0129\5\0\1\u0129\6\0\5\144\1\0"+
    "\5\144\1\u0163\5\144\1\0\2\144\1\u0129\1\144\1\u012a"+
    "\1\0\2\144\1\u01fc\4\144\4\0\1\u0129\4\0\1\144"+
    "\1\u0129\6\0\5\144\1\0\5\144\1\0\5\144\1\0"+
    "\2\144\1\u0150\1\144\1\36\1\0\7\144\4\0\1\u0150"+
    "\4\0\1\144\1\u0150\17\0\1\u01fd\66\0\1\u0153\13\0"+
    "\1\u01fd\23\0\5\u0105\1\0\5\u0105\1\0\4\u0105\1\u01cf"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\1\u01d3\4\u0105\1\0\5\u0105\1\0"+
    "\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\4\0\3\u010e\1\u01db\43\u010e\1\36"+
    "\33\u010e\1\u01df\23\u010e\1\36\10\u010e\3\u0118\1\u01e9\44\u0118"+
    "\1\36\32\u0118\1\u01ed\24\u0118\1\36\7\u0118\3\0\5\144"+
    "\1\u01a3\3\144\1\u01fe\1\144\1\0\5\144\1\0\2\144"+
    "\1\u0129\1\144\1\u012a\1\0\1\144\1\u01ff\5\144\4\0"+
    "\1\u0129\4\0\1\144\1\u0129\6\0\2\200\1\u0200\2\200"+
    "\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\33\0\1\u0137\1\0"+
    "\1\u0138\35\0\1\u0201\53\0\5\200\1\0\1\u0202\4\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\7\200\11\0\1\200\26\0\1\u0203\40\0\5\200\1\0"+
    "\5\200\1\0\3\200\1\u0204\1\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200"+
    "\1\0\4\200\1\u0205\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\7\0\4\200"+
    "\1\u0206\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200"+
    "\1\0\5\200\1\0\1\u0207\4\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\12\0\1\u0208"+
    "\63\0\1\u0209\60\0\1\u020a\60\0\1\u020b\57\0\1\u020c"+
    "\51\0\1\u020d\11\0\1\u020e\62\0\1\165\53\0\1\u020f"+
    "\53\0\1\u0210\50\0\1\u0211\63\0\1\u0212\23\0\1\u0212"+
    "\36\0\1\u0213\66\0\1\u0214\57\0\1\u0215\60\0\1\u0216"+
    "\63\0\1\u0150\1\0\1\36\14\0\1\u0150\5\0\1\u0150"+
    "\24\0\1\u0217\53\0\1\u0218\60\0\1\u0163\16\0\1\u0163"+
    "\31\0\1\u0219\54\0\1\u021a\62\0\1\u021b\17\0\1\u0156"+
    "\40\0\1\u01a3\3\0\1\u021c\17\0\1\u01a3\26\0\3\46"+
    "\1\u021d\1\46\1\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\u021e\2\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\3\46\1\u021f\1\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\1\46\1\u0220\3\46"+
    "\1\0\3\46\1\u0221\1\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\5\46\1\0\5\46\1\0\4\46\1\u0222\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\2\46\1\u0223"+
    "\2\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\3\46\1\u0224\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\26\0\1\u0225\37\0\3\46\1\u0226"+
    "\1\46\1\0\5\46\1\0\1\46\1\u0227\3\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\4\46\1\u0222"+
    "\1\0\4\46\1\u0228\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\3\0"+
    "\2\u0229\1\0\5\46\1\u0229\5\46\1\u0229\5\46\1\u0229"+
    "\2\46\1\u022a\1\46\2\u0229\7\46\4\u0229\1\u022a\4\u0229"+
    "\1\46\1\u022a\3\u0229\14\0\1\u022b\46\0\5\46\1\0"+
    "\3\46\1\u022c\1\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\3\46\1\u022d\1\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\46\1\u022e"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\1\46\1\u022f\5\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\5\46\1\0\1\u0230\4\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\6\0\5\46\1\0\5\46"+
    "\1\0\2\46\1\u0231\2\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\17\0\1\u0232\46\0\5\46\1\0\1\u0162\4\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\12\0\1\u021b\17\0"+
    "\1\u016b\1\0\1\242\14\0\1\241\5\0\1\241\6\0"+
    "\1\46\1\u0233\3\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\u0212\5\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\1\46"+
    "\1\u0234\5\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\3\46\1\u0235\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\4\46\1\u0236\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\2\46\1\u0237\2\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\3\46\1\u0222\1\46"+
    "\1\0\5\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\u0172"+
    "\1\0\5\u0172\1\0\5\u0172\1\0\2\u0172\1\0\1\u0172"+
    "\2\0\7\u0172\11\0\1\u0172\7\0\5\u0172\1\0\5\u0172"+
    "\1\0\5\u0172\1\0\2\u0172\1\0\1\u0172\2\0\7\u0172"+
    "\1\0\2\u0238\6\0\1\u0172\7\0\5\u0172\1\0\5\u0172"+
    "\1\0\5\u0172\1\0\2\u0172\1\0\1\u0172\3\0\5\u0172"+
    "\12\0\1\u0172\20\0\2\u0239\23\0\1\u0175\60\0\1\267"+
    "\21\0\1\u021a\35\0\1\267\20\0\5\302\1\0\2\302"+
    "\1\u023a\2\302\1\0\5\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302"+
    "\1\0\5\302\1\0\5\302\1\0\2\302\1\0\1\302"+
    "\3\0\5\302\12\0\1\302\7\0\5\302\1\0\5\302"+
    "\1\0\3\302\1\u023b\1\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302"+
    "\1\0\5\302\1\0\3\302\1\u023c\1\302\1\0\2\302"+
    "\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302"+
    "\7\0\5\302\1\0\5\302\1\0\4\302\1\u023d\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\5\302\1\0\2\302\1\u023e"+
    "\2\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\5\302\1\0\4\302\1\u023f"+
    "\1\0\5\302\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0\5\302"+
    "\1\u0163\5\302\1\0\2\302\1\0\1\302\2\0\2\302"+
    "\1\u0240\4\302\3\0\1\u0179\5\0\1\302\7\0\4\302"+
    "\1\u0241\1\0\5\302\1\0\5\302\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\1\302\1\u0242\3\302\1\0\5\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\4\302\1\u0243\1\0\5\302\1\0\5\302"+
    "\1\0\2\302\1\u0156\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\7\0\5\302\1\0\5\302\1\0\5\302"+
    "\1\0\2\302\1\u0150\1\302\1\36\1\0\7\302\3\0"+
    "\1\u0179\1\u0150\4\0\1\302\1\u0150\6\0\5\302\1\0"+
    "\1\302\1\u0244\3\302\1\0\5\302\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\5\302\1\0\5\302\1\0\5\302\1\0\2\302\1\0"+
    "\1\302\2\0\3\302\1\u0245\3\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\u01a3\3\302\1\u0246\1\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\1\302\1\u0247"+
    "\5\302\3\0\1\u0179\5\0\1\302\4\0\13\313\1\u0248"+
    "\33\313\1\20\32\313\1\u0249\24\313\1\20\32\313\1\u024a"+
    "\24\313\1\20\33\313\1\u024b\23\313\1\20\37\313\1\u018b"+
    "\1\313\1\u024c\14\313\1\u018b\1\20\4\313\1\u018b\15\313"+
    "\1\u024d\34\313\1\20\31\313\1\u024e\25\313\1\20\25\313"+
    "\1\u024f\31\313\1\20\26\313\1\u0250\16\313\1\u0250\11\313"+
    "\1\20\17\313\1\u0251\37\313\1\20\14\313\1\u0252\42\313"+
    "\1\20\46\313\1\u0253\10\313\1\20\17\313\1\u0254\17\313"+
    "\1\u0193\17\313\1\20\20\313\1\u0255\3\313\1\u0256\17\313"+
    "\1\u0255\12\313\1\20\10\313\13\325\1\u0257\34\325\1\20"+
    "\31\325\1\u0258\25\325\1\20\31\325\1\u0259\25\325\1\20"+
    "\32\325\1\u025a\24\325\1\20\36\325\1\u0199\1\325\1\u025b"+
    "\14\325\1\u0199\1\325\1\20\3\325\1\u0199\15\325\1\u025c"+
    "\35\325\1\20\30\325\1\u025d\26\325\1\20\24\325\1\u025e"+
    "\32\325\1\20\25\325\1\u025f\16\325\1\u025f\12\325\1\20"+
    "\16\325\1\u0260\40\325\1\20\13\325\1\u0261\43\325\1\20"+
    "\45\325\1\u0262\11\325\1\20\16\325\1\u0263\17\325\1\u01a1"+
    "\20\325\1\20\17\325\1\u0264\3\325\1\u0265\17\325\1\u0264"+
    "\13\325\1\20\7\325\23\0\1\u0266\37\0\5\46\1\0"+
    "\2\46\1\u0267\2\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\5\46\1\0\4\46\1\u0267"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\25\0\1\u0268\57\0\1\u0269"+
    "\60\0\1\u026a\55\0\1\u026b\42\0\1\u026c\56\0\3\101"+
    "\1\u026d\1\101\1\0\5\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\5\101\1\0\2\101"+
    "\1\u026e\2\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\3\101\1\u026f\1\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\1\101\1\u0270\3\101"+
    "\1\0\3\101\1\u0271\1\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\5\101\1\0\4\101\1\u0272\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\2\101\1\u0273"+
    "\2\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\3\101\1\u0274\1\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\3\101\1\u0275\1\101\1\0"+
    "\5\101\1\0\1\101\1\u0276\3\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\4\101\1\u0272\1\0\4\101"+
    "\1\u0277\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\3\0\2\u0229\1\0"+
    "\5\101\1\u0229\5\101\1\u0229\5\101\1\u0229\2\101\1\u0278"+
    "\1\101\2\u0229\7\101\4\u0229\1\u0278\4\u0229\1\101\1\u0278"+
    "\3\u0229\3\0\5\101\1\0\3\101\1\u0279\1\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\3\101\1\u027a\1\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\u027b\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\1\101\1\u027c\5\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\5\101\1\0\1\u027d\4\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\5\101\1\0\2\101\1\u027e\2\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\17\0\1\u027f\46\0\5\101"+
    "\1\0\1\u01b4\4\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\12\0\1\u021b\17\0\1\u01bc\1\0\1\350\14\0"+
    "\1\347\5\0\1\347\6\0\1\101\1\u0280\3\101\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\u0212\5\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\1\101\1\u0281\5\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\3\101\1\u0282"+
    "\1\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\5\101\1\0\4\101\1\u0283\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\2\101\1\u0284\2\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\3\101\1\u0272\1\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\u01c3\1\0\5\u01c3\1\0\5\u01c3"+
    "\1\0\2\u01c3\1\0\1\u01c3\2\0\7\u01c3\11\0\1\u01c3"+
    "\7\0\5\u01c3\1\0\5\u01c3\1\0\5\u01c3\1\0\2\u01c3"+
    "\1\0\1\u01c3\2\0\7\u01c3\1\0\2\u0285\6\0\1\u01c3"+
    "\7\0\5\u01c3\1\0\5\u01c3\1\0\5\u01c3\1\0\2\u01c3"+
    "\1\0\1\u01c3\3\0\5\u01c3\12\0\1\u01c3\20\0\2\u0286"+
    "\23\0\1\u01c6\22\0\1\u026c\35\0\1\267\20\0\5\u0105"+
    "\1\0\2\u0105\1\u0287\2\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\3\0\5\u0105\12\0\1\u0105\7\0\5\u0105"+
    "\1\0\5\u0105\1\0\3\u0105\1\u0288\1\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\5\u0105\1\0\3\u0105\1\u0289\1\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0\4\u0105"+
    "\1\u028a\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\u028b\2\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\4\u0105\1\u028c\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105"+
    "\1\0\5\u0105\1\u0163\5\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\2\u0105\1\u028d\4\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\4\u0105\1\u028e\1\0\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\1\u0105\1\u028f\3\u0105\1\0\5\u0105\1\0"+
    "\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\4\u0105\1\u0290\1\0\5\u0105"+
    "\1\0\5\u0105\1\0\2\u0105\1\u0156\1\u0105\2\0\7\u0105"+
    "\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105"+
    "\1\0\5\u0105\1\0\2\u0105\1\u0150\1\u0105\1\36\1\0"+
    "\7\u0105\3\0\1\u01c9\1\u0150\4\0\1\u0105\1\u0150\6\0"+
    "\5\u0105\1\0\1\u0105\1\u0291\3\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\3\u0105\1\u0292\3\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\u01a3\3\u0105\1\u0293"+
    "\1\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\1\u0105\1\u0294\5\u0105\3\0\1\u01c9\5\0\1\u0105\4\0"+
    "\13\u010e\1\u0295\33\u010e\1\36\32\u010e\1\u0296\24\u010e\1\36"+
    "\32\u010e\1\u0297\24\u010e\1\36\33\u010e\1\u0298\23\u010e\1\36"+
    "\37\u010e\1\u01db\1\u010e\1\163\14\u010e\1\u01db\1\36\4\u010e"+
    "\1\u01db\15\u010e\1\u0299\34\u010e\1\36\31\u010e\1\u029a\25\u010e"+
    "\1\36\25\u010e\1\u029b\31\u010e\1\36\26\u010e\1\u029c\16\u010e"+
    "\1\u029c\11\u010e\1\36\17\u010e\1\u029d\37\u010e\1\36\14\u010e"+
    "\1\u029e\42\u010e\1\36\46\u010e\1\u029f\10\u010e\1\36\17\u010e"+
    "\1\u02a0\17\u010e\1\u01e3\17\u010e\1\36\20\u010e\1\u02a1\3\u010e"+
    "\1\u02a2\17\u010e\1\u02a1\12\u010e\1\36\10\u010e\13\u0118\1\u02a3"+
    "\34\u0118\1\36\31\u0118\1\u02a4\25\u0118\1\36\31\u0118\1\u02a5"+
    "\25\u0118\1\36\32\u0118\1\u02a6\24\u0118\1\36\36\u0118\1\u01e9"+
    "\1\u0118\1\164\14\u0118\1\u01e9\1\u0118\1\36\3\u0118\1\u01e9"+
    "\15\u0118\1\u02a7\35\u0118\1\36\30\u0118\1\u02a8\26\u0118\1\36"+
    "\24\u0118\1\u02a9\32\u0118\1\36\25\u0118\1\u02aa\16\u0118\1\u02aa"+
    "\12\u0118\1\36\16\u0118\1\u02ab\40\u0118\1\36\13\u0118\1\u02ac"+
    "\43\u0118\1\36\45\u0118\1\u02ad\11\u0118\1\36\16\u0118\1\u02ae"+
    "\17\u0118\1\u01f1\20\u0118\1\36\17\u0118\1\u02af\3\u0118\1\u02b0"+
    "\17\u0118\1\u02af\13\u0118\1\36\7\u0118\3\0\5\101\1\0"+
    "\2\101\1\u02b1\2\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\5\101\1\0\4\101\1\u02b1"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\32\0\1\36\33\0\5\u01f5"+
    "\1\0\5\u01f5\1\0\5\u01f5\1\0\2\u01f5\1\u02b2\1\u01f5"+
    "\3\0\5\u01f5\2\36\1\0\1\36\4\0\1\36\1\0"+
    "\1\u01f5\7\0\5\u01f7\1\0\5\u01f7\1\0\5\u01f7\1\0"+
    "\2\u01f7\1\0\1\u01f7\2\0\7\u01f7\11\0\1\u01f7\7\0"+
    "\5\u01f7\1\0\5\u01f7\1\0\5\u01f7\1\0\2\u01f7\1\0"+
    "\1\u01f7\2\0\7\u01f7\1\0\2\u02b3\6\0\1\u01f7\7\0"+
    "\5\u01f7\1\0\5\u01f7\1\0\5\u01f7\1\0\2\u01f7\1\0"+
    "\1\u01f7\3\0\5\u01f7\12\0\1\u01f7\20\0\2\u02b4\23\0"+
    "\1\u01fa\21\0\5\144\1\0\5\144\1\0\2\144\1\u02b5"+
    "\2\144\1\0\2\144\1\u0129\1\144\1\u012a\1\0\7\144"+
    "\4\0\1\u0129\4\0\1\144\1\u0129\6\0\5\144\1\0"+
    "\3\144\1\u02b6\1\144\1\0\5\144\1\0\2\144\1\u0129"+
    "\1\144\1\u012a\1\0\7\144\4\0\1\u0129\4\0\1\144"+
    "\1\u0129\45\0\1\36\20\0\5\144\1\0\2\144\1\u02b7"+
    "\2\144\1\0\5\144\1\0\2\144\1\u0129\1\144\1\u012a"+
    "\1\0\7\144\4\0\1\u0129\4\0\1\144\1\u0129\6\0"+
    "\5\144\1\0\5\144\1\0\4\144\1\u02b7\1\0\2\144"+
    "\1\u0129\1\144\1\u012a\1\0\7\144\4\0\1\u0129\4\0"+
    "\1\144\1\u0129\6\0\3\200\1\u02b8\1\200\1\0\5\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\7\200\11\0\1\200\20\0\1\u02b9\46\0\3\200\1\u02ba"+
    "\1\200\1\0\5\200\1\0\1\200\1\u02bb\3\200\1\0"+
    "\2\200\1\u0137\1\200\1\u0138\1\0\7\200\11\0\1\200"+
    "\20\0\1\u02bc\46\0\5\200\1\0\3\200\1\u02bd\1\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\7\200\11\0\1\200\7\0\1\200\1\u02be\3\200\1\0"+
    "\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\7\0\5\200\1\0\3\200"+
    "\1\u02bf\1\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200\1\0"+
    "\2\200\1\u02c0\2\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\13\0\1\u02c1"+
    "\73\0\1\u02c2\55\0\1\u02c3\65\0\1\u020b\1\0\1\165"+
    "\46\0\1\u02c4\53\0\1\u02c5\56\0\1\u02c6\67\0\1\u02c7"+
    "\45\0\1\u02c8\71\0\1\u02c9\42\0\1\220\72\0\1\u02ca"+
    "\52\0\1\u02cb\65\0\1\u02cc\60\0\1\u0232\51\0\1\u0232"+
    "\42\0\2\u0229\6\0\1\u0229\5\0\1\u0229\5\0\1\u0229"+
    "\2\0\1\u0229\1\0\2\u0229\7\0\11\u0229\1\0\4\u0229"+
    "\14\0\1\u02cd\53\0\1\u022e\23\0\1\u022e\34\0\1\u0218"+
    "\61\0\1\u0266\47\0\4\46\1\u02ce\1\0\5\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\46\1\0"+
    "\5\46\1\0\4\46\1\u02cf\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\5\46\1\0\5\46\1\0\4\46\1\u02d0\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\4\46\1\u02d1\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\1\u02d2\4\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\3\0\2\u02d3\1\0\5\46\1\u02d3\5\46\1\u02d3"+
    "\5\46\1\u02d3\2\46\1\u02d4\1\46\2\u02d3\7\46\4\u02d3"+
    "\1\u02d4\4\u02d3\1\46\1\u02d4\3\u02d3\3\0\5\46\1\0"+
    "\5\46\1\0\2\46\1\u02d5\2\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\u02d6\1\46\1\165\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\13\0\1\u02d7\23\0\1\u02d7\26\0"+
    "\5\46\1\0\3\46\1\u02d8\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\2\46\1\u02d9"+
    "\2\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\13\0"+
    "\1\u0126\23\0\1\u0126\26\0\5\46\1\u0126\5\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\1\46"+
    "\1\u02da\5\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\2\46\1\u02db\2\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\41\0\1\u02dc\24\0\5\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\3\46\1\u02dd\3\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\0\5\46\1\0\4\46\1\u02de"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\3\0\2\u02d3\6\0\1\u02d3"+
    "\5\0\1\u02d3\5\0\1\u02d3\2\0\1\u02d3\1\0\2\u02d3"+
    "\7\0\11\u02d3\1\0\4\u02d3\3\0\5\46\1\0\5\46"+
    "\1\0\4\46\1\u02df\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\3\46\1\u02e0\1\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\1\46\1\u02e1\3\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\u02d7\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\1\46\1\u02e2\5\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\1\u02e3\4\46"+
    "\1\0\5\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\44\0\1\u02e4"+
    "\57\0\1\u02e4\1\0\2\u0238\16\0\5\302\1\0\5\302"+
    "\1\0\2\302\1\u02e5\2\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302"+
    "\1\0\3\302\1\u02e6\1\302\1\0\5\302\1\0\2\302"+
    "\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302"+
    "\7\0\5\302\1\0\5\302\1\0\3\302\1\u02e7\1\302"+
    "\1\0\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\7\0\5\302\1\0\5\302\1\0\4\302"+
    "\1\u02e8\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\5\302\1\0\4\302\1\u02e8"+
    "\1\0\5\302\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\4\0\2\u0229\1\0\5\302"+
    "\1\u0229\5\302\1\u0229\5\302\1\u0229\2\302\1\u0229\1\302"+
    "\2\u0229\7\302\3\u0229\1\u02e9\5\u0229\1\302\4\u0229\3\0"+
    "\5\302\1\0\3\302\1\u02ea\1\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\3\302\1\u02eb\1\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\5\302\1\u022e\5\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\1\302\1\u02ec"+
    "\5\302\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0"+
    "\1\u023f\4\302\1\0\5\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\5\302"+
    "\1\0\5\302\1\0\4\302\1\u02ed\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\5\302\1\0\3\302\1\u02e8\1\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\2\302\1\u02ee\2\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\5\302\1\0\5\302\1\0"+
    "\4\302\1\u02ee\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\4\0\21\313\1\u02ef\25\313"+
    "\1\20\24\313\1\u02f0\32\313\1\20\32\313\1\u02f1\24\313"+
    "\1\20\33\313\1\u02f2\23\313\1\20\33\313\1\u02f3\23\313"+
    "\1\20\25\313\1\u02f2\31\313\1\20\10\313\2\u02f4\6\313"+
    "\1\u02f4\5\313\1\u02f4\5\313\1\u02f4\2\313\1\u02f4\1\313"+
    "\2\u02f4\7\313\5\u02f4\1\20\3\u02f4\1\313\4\u02f4\14\313"+
    "\1\u02f5\32\313\1\20\24\313\1\u02f6\32\313\1\20\20\313"+
    "\1\u02f7\23\313\1\u02f7\12\313\1\20\24\313\1\u02f2\32\313"+
    "\1\20\21\313\1\u024f\35\313\1\20\33\313\1\u02f8\23\313"+
    "\1\20\23\313\1\u02f8\33\313\1\20\10\313\21\325\1\u02f9"+
    "\26\325\1\20\23\325\1\u02fa\33\325\1\20\31\325\1\u02fb"+
    "\25\325\1\20\32\325\1\u02fc\24\325\1\20\32\325\1\u02fd"+
    "\24\325\1\20\24\325\1\u02fc\32\325\1\20\7\325\2\u02fe"+
    "\6\325\1\u02fe\5\325\1\u02fe\5\325\1\u02fe\2\325\1\u02fe"+
    "\1\325\2\u02fe\7\325\6\u02fe\1\20\2\u02fe\1\325\4\u02fe"+
    "\14\325\1\u02ff\33\325\1\20\23\325\1\u0300\33\325\1\20"+
    "\17\325\1\u0301\23\325\1\u0301\13\325\1\20\23\325\1\u02fc"+
    "\33\325\1\20\20\325\1\u025e\36\325\1\20\32\325\1\u0302"+
    "\24\325\1\20\22\325\1\u0302\34\325\1\20\7\325\14\0"+
    "\1\u0150\46\0\5\46\1\0\3\46\1\270\1\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\17\0\1\u0303\65\0"+
    "\1\u0304\60\0\1\u027f\51\0\1\u027f\52\0\1\u027b\23\0"+
    "\1\u027b\26\0\4\101\1\u0305\1\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\5\101"+
    "\1\0\4\101\1\u0306\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\5\101\1\0\4\101\1\u0307\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\5\101\1\0\4\101"+
    "\1\u0308\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\1\u0309\4\101\1\0\5\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\3\0\2\u030a\1\0\5\101\1\u030a\5\101\1\u030a\5\101"+
    "\1\u030a\2\101\1\u030b\1\101\2\u030a\7\101\4\u030a\1\u030b"+
    "\4\u030a\1\101\1\u030b\3\u030a\3\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\u030c\2\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\5\101\1\0\5\101\1\0\2\101"+
    "\1\u030d\1\101\1\165\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\3\101\1\u030e\1\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\2\101\1\u030f\2\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\u0126\5\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\1\101\1\u0310"+
    "\5\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\2\101\1\u0311\2\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\41\0\1\u0312\24\0\5\101\1\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\3\101\1\u0313\3\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\5\101\1\0\4\101\1\u0314\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\3\0\2\u030a\6\0\1\u030a\5\0"+
    "\1\u030a\5\0\1\u030a\2\0\1\u030a\1\0\2\u030a\7\0"+
    "\11\u030a\1\0\4\u030a\3\0\5\101\1\0\5\101\1\0"+
    "\4\101\1\u0315\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\3\101"+
    "\1\u0316\1\101\1\0\5\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\5\101\1\0\1\101"+
    "\1\u0317\3\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\u02d7\5\101\1\0\5\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\1\101\1\u0318\5\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\101\1\0\1\u0319\4\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\44\0\1\u031a\57\0"+
    "\1\u031a\1\0\2\u0285\16\0\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\u031b\2\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\3\u0105\1\u031c\1\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\0\5\u0105\1\0\3\u0105\1\u031d\1\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0\4\u0105\1\u031e"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\5\u0105\1\0\4\u0105\1\u031e\1\0"+
    "\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\4\0\2\u0229\1\0\5\u0105\1\u0229"+
    "\5\u0105\1\u0229\5\u0105\1\u0229\2\u0105\1\u0229\1\u0105\2\u0229"+
    "\7\u0105\3\u0229\1\u031f\5\u0229\1\u0105\4\u0229\3\0\5\u0105"+
    "\1\0\3\u0105\1\u0320\1\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\3\u0105\1\u0321\1\u0105\1\0\5\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\5\u0105\1\u027b\5\u0105\1\0\5\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\1\u0105\1\u0322\5\u0105"+
    "\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\1\u028c"+
    "\4\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\5\u0105\1\0\4\u0105\1\u0323\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105"+
    "\1\0\3\u0105\1\u031e\1\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\7\0\5\u0105\1\0\2\u0105\1\u0324\2\u0105\1\0\5\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105\1\0\4\u0105"+
    "\1\u0324\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\4\0\21\u010e\1\u0325\25\u010e\1\36"+
    "\24\u010e\1\u0326\32\u010e\1\36\32\u010e\1\u0327\24\u010e\1\36"+
    "\33\u010e\1\u0328\23\u010e\1\36\33\u010e\1\u0329\23\u010e\1\36"+
    "\25\u010e\1\u0328\31\u010e\1\36\10\u010e\2\u032a\6\u010e\1\u032a"+
    "\5\u010e\1\u032a\5\u010e\1\u032a\2\u010e\1\u032a\1\u010e\2\u032a"+
    "\7\u010e\5\u032a\1\36\3\u032a\1\u010e\4\u032a\14\u010e\1\u032b"+
    "\32\u010e\1\36\24\u010e\1\u032c\32\u010e\1\36\20\u010e\1\u032d"+
    "\23\u010e\1\u032d\12\u010e\1\36\24\u010e\1\u0328\32\u010e\1\36"+
    "\21\u010e\1\u029b\35\u010e\1\36\33\u010e\1\u032e\23\u010e\1\36"+
    "\23\u010e\1\u032e\33\u010e\1\36\10\u010e\21\u0118\1\u032f\26\u0118"+
    "\1\36\23\u0118\1\u0330\33\u0118\1\36\31\u0118\1\u0331\25\u0118"+
    "\1\36\32\u0118\1\u0332\24\u0118\1\36\32\u0118\1\u0333\24\u0118"+
    "\1\36\24\u0118\1\u0332\32\u0118\1\36\7\u0118\2\u0334\6\u0118"+
    "\1\u0334\5\u0118\1\u0334\5\u0118\1\u0334\2\u0118\1\u0334\1\u0118"+
    "\2\u0334\7\u0118\6\u0334\1\36\2\u0334\1\u0118\4\u0334\14\u0118"+
    "\1\u0335\33\u0118\1\36\23\u0118\1\u0336\33\u0118\1\36\17\u0118"+
    "\1\u0337\23\u0118\1\u0337\13\u0118\1\36\23\u0118\1\u0332\33\u0118"+
    "\1\36\20\u0118\1\u02a9\36\u0118\1\36\32\u0118\1\u0338\24\u0118"+
    "\1\36\22\u0118\1\u0338\34\u0118\1\36\7\u0118\3\0\5\101"+
    "\1\0\3\101\1\373\1\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\u01f5\1\0\5\u01f5\1\0\5\u01f5"+
    "\1\0\2\u01f5\1\u0339\1\u01f5\3\0\5\u01f5\2\36\1\0"+
    "\1\36\4\0\1\36\1\0\1\u01f5\45\0\1\u033a\57\0"+
    "\1\u033a\1\0\2\u02b3\16\0\5\144\1\0\5\144\1\0"+
    "\4\144\1\u033b\1\0\2\144\1\u0129\1\144\1\u012a\1\0"+
    "\7\144\4\0\1\u0129\4\0\1\144\1\u0129\6\0\5\144"+
    "\1\u0126\5\144\1\0\5\144\1\0\2\144\1\u0129\1\144"+
    "\1\u012a\1\0\1\144\1\152\5\144\4\0\1\u0129\4\0"+
    "\1\144\1\u0129\6\0\5\144\1\0\3\144\1\u012c\1\144"+
    "\1\0\5\144\1\0\2\144\1\u0129\1\144\1\u012a\1\0"+
    "\7\144\4\0\1\u0129\4\0\1\144\1\u0129\6\0\4\200"+
    "\1\u033c\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\11\0\1\u033d"+
    "\55\0\5\200\1\0\3\200\1\u033e\1\200\1\0\5\200"+
    "\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200\11\0"+
    "\1\200\7\0\5\200\1\0\2\200\1\u033f\2\200\1\0"+
    "\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200"+
    "\11\0\1\200\11\0\1\u0340\55\0\2\200\1\u0341\2\200"+
    "\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200\1\0"+
    "\5\200\1\0\4\200\1\u0342\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\7\0\2\200\1\u0343"+
    "\2\200\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200"+
    "\1\0\1\u0344\4\200\1\0\5\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\14\0\1\u0345"+
    "\23\0\1\u0345\37\0\1\u0346\51\0\1\u0347\65\0\1\u0348"+
    "\60\0\1\u0349\63\0\1\u034a\52\0\1\u034b\47\0\1\u034c"+
    "\67\0\1\u034d\66\0\1\u034e\57\0\1\u034f\45\0\1\u0350"+
    "\61\0\1\u0351\47\0\5\46\1\u0345\5\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\1\46\1\u0352"+
    "\5\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\5\46\1\0\4\46\1\270\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\u0353\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\1\46\1\u0354\5\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\46\1\0"+
    "\3\46\1\u0355\1\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\2\46\1\u0222\2\46\1\0\5\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\3\46\1\u0356"+
    "\1\46\1\0\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\32\0\1\u02d6\1\0\1\165\14\0\1\241\5\0"+
    "\1\241\11\0\1\u0357\54\0\5\46\1\0\4\46\1\u0358"+
    "\1\0\5\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\5\46\1\0\2\46\1\u0359\2\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\1\270\4\46\1\0\5\46\1\0"+
    "\5\46\1\0\2\46\1\241\1\46\1\242\1\0\7\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\2\46\1\u035a"+
    "\2\46\1\0\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\24\0\1\u035b\41\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\u035c\2\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\3\46\1\u035d\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\3\46\1\u035e"+
    "\1\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\u035f\2\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\3\46\1\u0360"+
    "\1\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\3\46\1\u0361\1\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\1\46\1\u0362\3\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\u0172\1\0\5\u0172\1\0\5\u0172\1\0\2\u0172\1\0"+
    "\1\u0172\2\0\1\u0174\5\u0172\1\u02e4\11\0\1\u0172\7\0"+
    "\5\302\1\0\5\302\1\0\4\302\1\u0363\1\0\2\302"+
    "\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302"+
    "\7\0\5\302\1\0\5\302\1\0\4\302\1\u0364\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\1\u0365\4\302\1\0\5\302"+
    "\1\0\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\4\0\2\u02d3\1\0\5\302\1\u02d3\5\302"+
    "\1\u02d3\5\302\1\u02d3\2\302\1\u02d3\1\302\2\u02d3\7\302"+
    "\3\u02d3\1\u0366\5\u02d3\1\302\4\u02d3\3\0\5\302\1\u0126"+
    "\5\302\1\0\5\302\1\0\2\302\1\0\1\302\2\0"+
    "\1\302\1\u0367\5\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\5\302\1\0\2\302\1\u0368\2\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\5\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\3\302\1\u0369\3\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\5\302\1\u02d7\5\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\1\302\1\u036a"+
    "\5\302\3\0\1\u0179\5\0\1\302\7\0\5\302\1\0"+
    "\3\302\1\u0183\1\302\1\0\5\302\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\4\0"+
    "\23\313\1\u036b\23\313\1\20\33\313\1\u036c\23\313\1\20"+
    "\21\313\1\u036d\35\313\1\20\10\313\2\u036e\6\313\1\u036e"+
    "\5\313\1\u036e\5\313\1\u036e\2\313\1\u036e\1\313\2\u036e"+
    "\7\313\5\u036e\1\20\3\u036e\1\313\4\u036e\10\313\1\u036f"+
    "\23\313\1\u036f\12\313\1\20\20\313\1\u0370\23\313\1\u0370"+
    "\12\313\1\20\23\313\1\u0371\33\313\1\20\46\313\1\u0372"+
    "\10\313\1\20\24\313\1\u018b\32\313\1\20\10\313\23\325"+
    "\1\u0373\24\325\1\20\32\325\1\u0374\24\325\1\20\20\325"+
    "\1\u0375\36\325\1\20\7\325\2\u0376\6\325\1\u0376\5\325"+
    "\1\u0376\5\325\1\u0376\2\325\1\u0376\1\325\2\u0376\7\325"+
    "\6\u0376\1\20\2\u0376\1\325\4\u0376\10\325\1\u0377\23\325"+
    "\1\u0377\13\325\1\20\17\325\1\u0378\23\325\1\u0378\13\325"+
    "\1\20\22\325\1\u0379\34\325\1\20\45\325\1\u037a\11\325"+
    "\1\20\23\325\1\u0199\33\325\1\20\7\325\23\0\1\u037b"+
    "\45\0\1\u037c\51\0\5\101\1\u0345\5\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\1\101\1\u037d"+
    "\5\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\0\5\101\1\0\4\101\1\373\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\u037e\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\1\101\1\u037f\5\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\3\101\1\u0380\1\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\2\101\1\u0272\2\101\1\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\3\101\1\u0381"+
    "\1\101\1\0\5\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\32\0\1\u030d\1\0\1\165\14\0\1\347\5\0"+
    "\1\347\6\0\5\101\1\0\4\101\1\u0382\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\5\101"+
    "\1\0\2\101\1\u0383\2\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\1\373\4\101\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\2\101\1\u0384\2\101\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\24\0"+
    "\1\u0385\41\0\5\101\1\0\5\101\1\0\2\101\1\u0386"+
    "\2\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\3\101\1\u0387\1\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\3\101\1\u0388\1\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\u0389\2\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\5\101\1\0\3\101\1\u038a\1\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\3\101\1\u038b"+
    "\1\101\1\0\5\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\1\101\1\u038c\3\101\1\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\u01c3\1\0"+
    "\5\u01c3\1\0\5\u01c3\1\0\2\u01c3\1\0\1\u01c3\2\0"+
    "\1\u01c5\5\u01c3\1\u031a\11\0\1\u01c3\7\0\5\u0105\1\0"+
    "\5\u0105\1\0\4\u0105\1\u038d\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105"+
    "\1\0\5\u0105\1\0\4\u0105\1\u038e\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\0\1\u038f\4\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\4\0\2\u030a\1\0\5\u0105\1\u030a\5\u0105\1\u030a\5\u0105"+
    "\1\u030a\2\u0105\1\u030a\1\u0105\2\u030a\7\u0105\3\u030a\1\u0390"+
    "\5\u030a\1\u0105\4\u030a\3\0\5\u0105\1\u0126\5\u0105\1\0"+
    "\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0\1\u0105\1\u0130"+
    "\5\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\2\u0105\1\u0391\2\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\3\u0105\1\u0392\3\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\5\u0105\1\u02d7\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\1\u0105\1\u0393\5\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\3\u0105\1\u01d3"+
    "\1\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\4\0\23\u010e\1\u0394"+
    "\23\u010e\1\36\33\u010e\1\u0395\23\u010e\1\36\21\u010e\1\u0396"+
    "\35\u010e\1\36\10\u010e\2\u0397\6\u010e\1\u0397\5\u010e\1\u0397"+
    "\5\u010e\1\u0397\2\u010e\1\u0397\1\u010e\2\u0397\7\u010e\5\u0397"+
    "\1\36\3\u0397\1\u010e\4\u0397\10\u010e\1\u0398\23\u010e\1\u0398"+
    "\12\u010e\1\36\20\u010e\1\u0131\23\u010e\1\u0131\12\u010e\1\36"+
    "\23\u010e\1\u0399\33\u010e\1\36\46\u010e\1\u039a\10\u010e\1\36"+
    "\24\u010e\1\u01db\32\u010e\1\36\10\u010e\23\u0118\1\u039b\24\u0118"+
    "\1\36\32\u0118\1\u039c\24\u0118\1\36\20\u0118\1\u039d\36\u0118"+
    "\1\36\7\u0118\2\u039e\6\u0118\1\u039e\5\u0118\1\u039e\5\u0118"+
    "\1\u039e\2\u0118\1\u039e\1\u0118\2\u039e\7\u0118\6\u039e\1\36"+
    "\2\u039e\1\u0118\4\u039e\10\u0118\1\u039f\23\u0118\1\u039f\13\u0118"+
    "\1\36\17\u0118\1\u0133\23\u0118\1\u0133\13\u0118\1\36\22\u0118"+
    "\1\u03a0\34\u0118\1\36\45\u0118\1\u03a1\11\u0118\1\36\23\u0118"+
    "\1\u01e9\33\u0118\1\36\7\u0118\3\0\5\u01f5\1\0\5\u01f5"+
    "\1\0\5\u01f5\1\0\2\u01f5\1\u03a2\1\u01f5\3\0\5\u01f5"+
    "\2\36\1\0\1\36\4\0\1\36\1\0\1\u01f5\7\0"+
    "\5\u01f7\1\0\5\u01f7\1\0\5\u01f7\1\0\2\u01f7\1\0"+
    "\1\u01f7\2\0\1\u01f9\5\u01f7\1\u033a\11\0\1\u01f7\7\0"+
    "\5\144\1\0\5\144\1\0\4\144\1\u012c\1\0\2\144"+
    "\1\u0129\1\144\1\u012a\1\0\7\144\4\0\1\u0129\4\0"+
    "\1\144\1\u0129\6\0\5\200\1\u0345\5\200\1\0\5\200"+
    "\1\0\2\200\1\u0137\1\200\1\u0138\1\0\1\200\1\u03a3"+
    "\5\200\11\0\1\200\13\0\1\u03a4\53\0\5\200\1\0"+
    "\4\200\1\u03a5\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\7\0\5\200\1\0"+
    "\5\200\1\0\2\200\1\u03a6\2\200\1\0\2\200\1\u0137"+
    "\1\200\1\u0138\1\0\7\200\11\0\1\200\22\0\1\u03a7"+
    "\16\0\1\u03a7\25\0\5\200\1\0\5\200\1\u03a7\5\200"+
    "\1\0\2\200\1\u0137\1\200\1\u0138\1\0\2\200\1\u03a8"+
    "\4\200\11\0\1\200\7\0\5\200\1\0\3\200\1\u03a9"+
    "\1\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\7\0\4\200\1\u03aa\1\0"+
    "\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\7\0\1\200\1\u03ab\3\200"+
    "\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\15\0\1\u03ac\74\0"+
    "\1\165\40\0\1\u02c4\63\0\1\165\50\0\1\u03ad\75\0"+
    "\1\u034d\47\0\1\u03ae\14\0\1\u034b\37\0\1\u03af\73\0"+
    "\1\u0150\44\0\1\u0353\23\0\1\u0353\30\0\1\u0232\57\0"+
    "\1\u03b0\55\0\5\46\1\0\1\u03b1\4\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\21\0\1\u03b2\16\0\1\u03b2"+
    "\25\0\5\46\1\0\5\46\1\u03b2\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\2\46\1\u03b3\4\46\4\0"+
    "\1\241\4\0\1\46\1\241\6\0\5\46\1\0\5\46"+
    "\1\0\5\46\1\0\1\46\1\u0228\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\4\46\1\u02e1\1\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\13\0\1\u03b4\23\0\1\u03b4\26\0\1\46"+
    "\1\u03b5\3\46\1\0\5\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\0\5\46\1\0\3\46"+
    "\1\u035e\1\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\5\46\1\0\2\46\1\u03b6\2\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\26\0\1\u03b7\37\0\5\46\1\0\5\46"+
    "\1\0\4\46\1\u03b8\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\1\46\1\u03b9\3\46\1\0\5\46\1\0"+
    "\2\46\1\u03ba\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\5\46\1\0\5\46\1\0"+
    "\4\46\1\u0228\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\46"+
    "\1\0\2\46\1\u0228\2\46\1\0\5\46\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\6\0\5\46\1\u03b4\5\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\1\46\1\u03bb"+
    "\5\46\4\0\1\241\4\0\1\46\1\241\6\0\4\46"+
    "\1\u03bc\1\0\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\302\1\0\5\302\1\0\4\302\1\u0183"+
    "\1\0\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\7\0\5\302\1\u0353\5\302\1\0\5\302"+
    "\1\0\2\302\1\0\1\302\2\0\1\302\1\u03bd\5\302"+
    "\3\0\1\u0179\5\0\1\302\7\0\2\302\1\u02e8\2\302"+
    "\1\0\5\302\1\0\5\302\1\0\2\302\1\0\1\302"+
    "\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0\1\u0183"+
    "\4\302\1\0\5\302\1\0\5\302\1\0\2\302\1\0"+
    "\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\2\302\1\u03be\2\302\1\0\5\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\5\302\1\0\2\302\1\u03bf"+
    "\2\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\3\302\1\u03c0\1\302\1\0"+
    "\5\302\1\0\5\302\1\0\2\302\1\0\1\302\2\0"+
    "\7\302\3\0\1\u0179\5\0\1\302\4\0\23\313\1\u018b"+
    "\23\313\1\20\20\313\1\u03c1\23\313\1\u03c1\12\313\1\20"+
    "\15\313\1\u02f2\41\313\1\20\16\313\1\u03c2\40\313\1\20"+
    "\13\313\1\u018b\43\313\1\20\15\313\1\u03c3\41\313\1\20"+
    "\31\313\1\u03c4\25\313\1\20\10\313\23\325\1\u0199\24\325"+
    "\1\20\17\325\1\u03c5\23\325\1\u03c5\13\325\1\20\14\325"+
    "\1\u02fc\42\325\1\20\15\325\1\u03c6\41\325\1\20\12\325"+
    "\1\u0199\44\325\1\20\14\325\1\u03c7\42\325\1\20\30\325"+
    "\1\u03c8\26\325\1\20\7\325\10\0\1\u037e\23\0\1\u037e"+
    "\30\0\1\u027f\55\0\5\101\1\0\1\u03c9\4\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\21\0\1\u03ca\16\0"+
    "\1\u03ca\25\0\5\101\1\0\5\101\1\u03ca\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\2\101\1\u03cb\4\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\5\101\1\0\5\101\1\0\1\101\1\u0277\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\4\101\1\u0317\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\1\101\1\u03cc\3\101\1\0"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\0\5\101\1\0\3\101\1\u0388\1\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\u03cd\2\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\26\0"+
    "\1\u03ce\37\0\5\101\1\0\5\101\1\0\4\101\1\u03cf"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\1\101"+
    "\1\u03d0\3\101\1\0\5\101\1\0\2\101\1\u03d1\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\5\101\1\0\4\101\1\u0277\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\5\101\1\0\2\101\1\u0277"+
    "\2\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\6\0"+
    "\5\101\1\u03b4\5\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\1\101\1\u03d2\5\101\4\0\1\347"+
    "\4\0\1\101\1\347\6\0\4\101\1\u03d3\1\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\u0105"+
    "\1\0\5\u0105\1\0\4\u0105\1\u01d3\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\u037e\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\1\u0105\1\u03d4\5\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\2\u0105\1\u031e\2\u0105\1\0\5\u0105\1\0"+
    "\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0"+
    "\1\u01c9\5\0\1\u0105\7\0\2\u0105\1\u03d5\2\u0105\1\0"+
    "\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105\2\0"+
    "\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0"+
    "\5\u0105\1\0\2\u0105\1\u03d6\2\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\3\u0105\1\u03d7\1\u0105\1\0\5\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\4\0\23\u010e\1\u01db\23\u010e\1\36\20\u010e\1\u03d8"+
    "\23\u010e\1\u03d8\12\u010e\1\36\15\u010e\1\u0328\41\u010e\1\36"+
    "\16\u010e\1\u03d9\40\u010e\1\36\15\u010e\1\u03da\41\u010e\1\36"+
    "\31\u010e\1\u03db\25\u010e\1\36\10\u010e\23\u0118\1\u01e9\24\u0118"+
    "\1\36\17\u0118\1\u03dc\23\u0118\1\u03dc\13\u0118\1\36\14\u0118"+
    "\1\u0332\42\u0118\1\36\15\u0118\1\u03dd\41\u0118\1\36\14\u0118"+
    "\1\u03de\42\u0118\1\36\30\u0118\1\u03df\26\u0118\1\36\7\u0118"+
    "\3\0\5\u01f5\1\0\5\u01f5\1\0\5\u01f5\1\0\2\u01f5"+
    "\1\0\1\u01f5\3\0\5\u01f5\2\36\1\0\1\36\4\0"+
    "\1\36\1\0\1\u01f5\7\0\5\200\1\0\1\u03e0\4\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\7\200\11\0\1\200\33\0\1\u03a4\1\0\1\u03e1\14\0"+
    "\1\u03a4\5\0\1\u03a4\6\0\1\200\1\u03e2\3\200\1\0"+
    "\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\7\0\5\200\1\0\5\200"+
    "\1\0\3\200\1\u03a9\1\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\14\0\1\u03e3\23\0"+
    "\1\u03e3\26\0\5\200\1\u03e3\5\200\1\0\5\200\1\0"+
    "\2\200\1\u0137\1\200\1\u0138\1\0\1\200\1\u03e4\5\200"+
    "\11\0\1\200\7\0\5\200\1\0\5\200\1\0\5\200"+
    "\1\0\2\200\1\u03a4\1\200\1\u03e1\1\0\7\200\4\0"+
    "\1\u03a4\4\0\1\200\1\u03a4\6\0\4\200\1\u03e5\1\0"+
    "\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138"+
    "\1\0\7\200\11\0\1\200\11\0\1\u034d\65\0\1\u02c9"+
    "\57\0\1\u03e6\54\0\1\u03e7\23\0\1\u03e7\44\0\1\u03e8"+
    "\41\0\2\46\1\u035e\2\46\1\0\5\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\12\0\1\u0232\53\0\4\46"+
    "\1\u0222\1\0\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\12\0\1\u0218\53\0\5\46\1\0\2\46\1\u02df"+
    "\2\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\5\46\1\0\4\46\1\u0162\1\0\2\46"+
    "\1\241\1\46\1\242\1\0\7\46\4\0\1\241\4\0"+
    "\1\46\1\241\17\0\1\u03e9\46\0\5\46\1\0\3\46"+
    "\1\u03ea\1\46\1\0\5\46\1\0\2\46\1\241\1\46"+
    "\1\242\1\0\7\46\4\0\1\241\4\0\1\46\1\241"+
    "\6\0\5\46\1\0\2\46\1\u03eb\2\46\1\0\5\46"+
    "\1\0\2\46\1\241\1\46\1\242\1\0\7\46\4\0"+
    "\1\241\4\0\1\46\1\241\15\0\1\u03ae\14\0\1\u03ba"+
    "\1\0\1\242\14\0\1\241\5\0\1\241\6\0\4\46"+
    "\1\u0162\1\0\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\7\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\46\1\u03e7\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\1\46\1\u03ec\5\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\302\1\0"+
    "\5\302\1\u03b2\5\302\1\0\2\302\1\0\1\302\2\0"+
    "\2\302\1\u03ed\4\302\3\0\1\u0179\5\0\1\302\7\0"+
    "\5\302\1\0\5\302\1\0\2\302\1\u03ee\2\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\5\302\1\0\4\302\1\u03ef"+
    "\1\0\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179"+
    "\5\0\1\302\7\0\5\302\1\u03b4\5\302\1\0\5\302"+
    "\1\0\2\302\1\0\1\302\2\0\1\302\1\u03f0\5\302"+
    "\3\0\1\u0179\5\0\1\302\4\0\16\313\1\u03f1\16\313"+
    "\1\u03f1\11\313\1\20\20\313\1\u03f2\23\313\1\u03f2\12\313"+
    "\1\20\31\313\1\u03f3\25\313\1\20\33\313\1\u03f4\23\313"+
    "\1\20\10\313\16\325\1\u03f5\16\325\1\u03f5\12\325\1\20"+
    "\17\325\1\u03f6\23\325\1\u03f6\13\325\1\20\30\325\1\u03f7"+
    "\26\325\1\20\32\325\1\u03f8\24\325\1\20\7\325\3\0"+
    "\2\101\1\u0388\2\101\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\12\0\1\u027f\53\0\4\101\1\u0272"+
    "\1\0\5\101\1\0\5\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\7\101\4\0\1\347\4\0\1\101\1\347"+
    "\6\0\5\101\1\0\2\101\1\u0315\2\101\1\0\5\101"+
    "\1\0\2\101\1\347\1\101\1\350\1\0\7\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\5\101\1\0\5\101"+
    "\1\0\4\101\1\u01b4\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\7\101\4\0\1\347\4\0\1\101\1\347\17\0"+
    "\1\u03f9\46\0\5\101\1\0\3\101\1\u03fa\1\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\2\101\1\u03fb\2\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\15\0\1\u03ae\14\0\1\u03d1\1\0\1\350\14\0"+
    "\1\347\5\0\1\347\6\0\4\101\1\u01b4\1\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\5\101"+
    "\1\u03e7\5\101\1\0\5\101\1\0\2\101\1\347\1\101"+
    "\1\350\1\0\1\101\1\u03fc\5\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\5\u0105\1\0\5\u0105\1\u03ca\5\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\2\u0105\1\u03fd\4\u0105"+
    "\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105\1\0\5\u0105"+
    "\1\0\2\u0105\1\u03fe\2\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105"+
    "\1\0\5\u0105\1\0\4\u0105\1\u03ff\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\u03b4\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\1\u0105\1\u0400\5\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\4\0\16\u010e\1\u0401\16\u010e\1\u0401\11\u010e\1\36"+
    "\20\u010e\1\u0402\23\u010e\1\u0402\12\u010e\1\36\31\u010e\1\u0403"+
    "\25\u010e\1\36\33\u010e\1\u0404\23\u010e\1\36\10\u010e\16\u0118"+
    "\1\u0405\16\u0118\1\u0405\12\u0118\1\36\17\u0118\1\u0406\23\u0118"+
    "\1\u0406\13\u0118\1\36\30\u0118\1\u0407\26\u0118\1\36\32\u0118"+
    "\1\u0408\24\u0118\1\36\7\u0118\3\0\2\200\1\u03a9\2\200"+
    "\1\0\5\200\1\0\5\200\1\0\2\200\1\u0137\1\200"+
    "\1\u0138\1\0\7\200\11\0\1\200\14\0\1\u0409\16\0"+
    "\1\u040a\4\0\1\u0409\11\0\1\u040a\5\0\1\u040a\6\0"+
    "\5\200\1\0\2\200\1\u0342\2\200\1\0\5\200\1\0"+
    "\2\200\1\u0137\1\200\1\u0138\1\0\7\200\11\0\1\200"+
    "\15\0\1\u040b\51\0\5\200\1\0\1\u040c\4\200\1\0"+
    "\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200"+
    "\11\0\1\200\7\0\5\200\1\u03e7\5\200\1\0\5\200"+
    "\1\0\2\200\1\u0137\1\200\1\u0138\1\0\1\200\1\u040d"+
    "\5\200\11\0\1\200\20\0\1\u040e\50\0\1\u02c9\75\0"+
    "\1\u0218\41\0\1\u040f\55\0\2\46\1\u0410\2\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\5\46\1\0\3\46\1\u0411\1\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\2\46\1\u02df\2\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\4\302\1\u02e8\1\0\5\302\1\0\5\302\1\0\2\302"+
    "\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0\1\302"+
    "\7\0\5\302\1\0\5\302\1\0\4\302\1\u023f\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\7\0\5\302\1\0\3\302\1\u0412\1\302\1\0"+
    "\5\302\1\0\2\302\1\0\1\302\2\0\7\302\3\0"+
    "\1\u0179\5\0\1\302\7\0\4\302\1\u023f\1\0\5\302"+
    "\1\0\5\302\1\0\2\302\1\0\1\302\2\0\7\302"+
    "\3\0\1\u0179\5\0\1\302\4\0\7\313\1\u02f2\37\313"+
    "\1\20\17\313\1\u024f\37\313\1\20\33\313\1\u024f\23\313"+
    "\1\20\24\313\1\u0413\32\313\1\20\10\313\7\325\1\u02fc"+
    "\40\325\1\20\16\325\1\u025e\40\325\1\20\32\325\1\u025e"+
    "\24\325\1\20\23\325\1\u0414\33\325\1\20\7\325\5\0"+
    "\1\u0415\55\0\2\101\1\u0416\2\101\1\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\5\101\1\0"+
    "\3\101\1\u0417\1\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\6\0\2\101\1\u0315\2\101\1\0\5\101\1\0"+
    "\5\101\1\0\2\101\1\347\1\101\1\350\1\0\7\101"+
    "\4\0\1\347\4\0\1\101\1\347\6\0\4\u0105\1\u031e"+
    "\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0\5\u0105"+
    "\1\0\5\u0105\1\0\4\u0105\1\u028c\1\0\2\u0105\1\0"+
    "\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\7\0"+
    "\5\u0105\1\0\3\u0105\1\u0418\1\u0105\1\0\5\u0105\1\0"+
    "\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0"+
    "\1\u0105\7\0\4\u0105\1\u028c\1\0\5\u0105\1\0\5\u0105"+
    "\1\0\2\u0105\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9"+
    "\5\0\1\u0105\4\0\7\u010e\1\u0328\37\u010e\1\36\17\u010e"+
    "\1\u029b\37\u010e\1\36\33\u010e\1\u029b\23\u010e\1\36\24\u010e"+
    "\1\u0419\32\u010e\1\36\10\u010e\7\u0118\1\u0332\40\u0118\1\36"+
    "\16\u0118\1\u02a9\40\u0118\1\36\32\u0118\1\u02a9\24\u0118\1\36"+
    "\23\u0118\1\u041a\33\u0118\1\36\7\u0118\5\0\1\u041b\57\0"+
    "\1\u041c\55\0\2\200\1\u041d\2\200\1\0\5\200\1\0"+
    "\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0\7\200"+
    "\11\0\1\200\7\0\2\200\1\u0342\2\200\1\0\5\200"+
    "\1\0\5\200\1\0\2\200\1\u0137\1\200\1\u0138\1\0"+
    "\7\200\11\0\1\200\12\0\1\u041e\57\0\1\u0169\54\0"+
    "\3\46\1\u0171\1\46\1\0\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\7\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\3\46\1\u041f\1\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\2\302\1\u0420\2\302\1\0\5\302\1\0\5\302\1\0"+
    "\2\302\1\0\1\302\2\0\7\302\3\0\1\u0179\5\0"+
    "\1\302\4\0\5\313\1\u0421\41\313\1\20\10\313\5\325"+
    "\1\u0422\42\325\1\20\7\325\6\0\1\u01ba\54\0\3\101"+
    "\1\u01c2\1\101\1\0\5\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\7\101\4\0\1\347\4\0"+
    "\1\101\1\347\6\0\3\101\1\u0423\1\101\1\0\5\101"+
    "\1\0\5\101\1\0\2\101\1\347\1\101\1\350\1\0"+
    "\7\101\4\0\1\347\4\0\1\101\1\347\6\0\2\u0105"+
    "\1\u0424\2\u0105\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105"+
    "\1\0\1\u0105\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105"+
    "\4\0\5\u010e\1\u0425\41\u010e\1\36\10\u010e\5\u0118\1\u0426"+
    "\42\u0118\1\36\7\u0118\27\0\1\u041b\2\0\1\u0427\13\0"+
    "\1\u041b\5\0\1\u041b\13\0\1\u0428\23\0\1\u0428\26\0"+
    "\5\46\1\u0428\5\46\1\0\5\46\1\0\2\46\1\241"+
    "\1\46\1\242\1\0\1\46\1\u0429\5\46\4\0\1\241"+
    "\4\0\1\46\1\241\6\0\3\302\1\u0245\1\302\1\0"+
    "\5\302\1\0\5\302\1\0\2\302\1\0\1\302\2\0"+
    "\7\302\3\0\1\u0179\5\0\1\302\4\0\6\313\1\u0253"+
    "\40\313\1\20\10\313\6\325\1\u0262\41\325\1\20\7\325"+
    "\3\0\5\101\1\u0428\5\101\1\0\5\101\1\0\2\101"+
    "\1\347\1\101\1\350\1\0\1\101\1\u042a\5\101\4\0"+
    "\1\347\4\0\1\101\1\347\6\0\3\u0105\1\u0292\1\u0105"+
    "\1\0\5\u0105\1\0\5\u0105\1\0\2\u0105\1\0\1\u0105"+
    "\2\0\7\u0105\3\0\1\u01c9\5\0\1\u0105\4\0\6\u010e"+
    "\1\u029f\40\u010e\1\36\10\u010e\6\u0118\1\u02ad\41\u0118\1\36"+
    "\7\u0118\16\0\1\u042b\16\0\1\u042b\25\0\5\46\1\0"+
    "\5\46\1\u042b\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\2\46\1\u042c\4\46\4\0\1\241\4\0\1\46"+
    "\1\241\6\0\5\101\1\0\5\101\1\u042b\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\2\101\1\u042d\4\101"+
    "\4\0\1\347\4\0\1\101\1\347\13\0\1\u042e\23\0"+
    "\1\u042e\26\0\5\46\1\u042e\5\46\1\0\5\46\1\0"+
    "\2\46\1\241\1\46\1\242\1\0\1\46\1\u042f\5\46"+
    "\4\0\1\241\4\0\1\46\1\241\6\0\5\101\1\u042e"+
    "\5\101\1\0\5\101\1\0\2\101\1\347\1\101\1\350"+
    "\1\0\1\101\1\u0430\5\101\4\0\1\347\4\0\1\101"+
    "\1\347\14\0\1\u0431\51\0\5\46\1\0\1\u0432\4\46"+
    "\1\0\5\46\1\0\2\46\1\241\1\46\1\242\1\0"+
    "\7\46\4\0\1\241\4\0\1\46\1\241\6\0\5\101"+
    "\1\0\1\u0433\4\101\1\0\5\101\1\0\2\101\1\347"+
    "\1\101\1\350\1\0\7\101\4\0\1\347\4\0\1\101"+
    "\1\347\10\0\1\165\55\0\2\46\1\u0228\2\46\1\0"+
    "\5\46\1\0\5\46\1\0\2\46\1\241\1\46\1\242"+
    "\1\0\7\46\4\0\1\241\4\0\1\46\1\241\6\0"+
    "\2\101\1\u0277\2\101\1\0\5\101\1\0\5\101\1\0"+
    "\2\101\1\347\1\101\1\350\1\0\7\101\4\0\1\347"+
    "\4\0\1\101\1\347\3\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[48000];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\17\0\3\11\12\1\2\11\1\1\1\11\70\1\1\11"+
    "\2\1\2\11\13\1\1\11\13\1\1\11\1\1\2\11"+
    "\3\1\1\11\15\1\13\0\1\1\11\0\2\1\1\0"+
    "\1\11\5\1\3\0\10\1\1\0\3\1\1\11\5\1"+
    "\1\0\1\1\2\0\12\1\24\0\1\1\5\0\2\1"+
    "\1\0\1\11\5\1\1\0\10\1\1\0\10\1\1\0"+
    "\1\1\2\0\12\1\24\0\1\1\2\0\1\1\2\0"+
    "\1\1\1\0\1\11\2\1\2\0\2\1\4\0\2\1"+
    "\1\0\1\11\1\0\1\1\1\0\4\1\1\11\27\0"+
    "\7\1\1\0\3\1\1\0\5\1\1\0\1\1\1\0"+
    "\10\1\4\0\1\1\1\0\15\1\35\0\2\1\5\0"+
    "\17\1\1\0\1\1\1\0\10\1\3\0\1\1\1\0"+
    "\15\1\34\0\2\1\2\0\2\1\2\0\2\1\1\0"+
    "\3\1\1\0\1\1\1\0\4\1\25\0\10\1\1\0"+
    "\3\1\1\11\1\1\1\0\2\1\1\0\3\1\1\0"+
    "\5\1\2\0\16\1\4\0\1\1\16\0\1\1\13\0"+
    "\1\1\5\0\16\1\1\0\3\1\1\0\5\1\2\0"+
    "\16\1\34\0\1\1\3\0\4\1\1\0\2\1\1\0"+
    "\4\1\15\0\5\1\1\11\2\1\2\0\4\1\1\0"+
    "\22\1\5\0\1\1\11\0\1\1\6\0\5\1\1\11"+
    "\2\1\1\0\4\1\1\0\22\1\5\0\1\1\11\0"+
    "\1\1\5\0\3\1\1\0\2\1\1\0\4\1\10\0"+
    "\1\11\4\0\1\1\1\0\3\1\1\0\3\1\1\0"+
    "\17\1\3\0\1\1\7\0\1\1\6\0\1\1\1\0"+
    "\6\1\1\0\16\1\3\0\1\1\6\0\1\1\4\0"+
    "\1\1\1\0\2\1\1\0\4\1\5\0\1\1\1\0"+
    "\1\1\1\0\2\1\1\0\2\1\1\0\6\1\10\0"+
    "\1\1\1\0\3\1\1\0\2\1\1\0\6\1\10\0"+
    "\3\1\1\0\2\1\4\0\7\1\11\0\7\1\13\0"+
    "\2\1\2\0\3\1\3\0\3\1\3\0\1\11\1\1"+
    "\1\0\2\1\2\0\2\1\2\0\1\11\1\0\2\1"+
    "\1\0\2\1\1\0\2\1\1\0\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1075];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	String location = "MAIN PROGRAM";
	
	Map<String, Boolean> variables = new HashMap<String, Boolean>();
	List<String> dimension = new LinkedList<String>();
	
	//mantis EGL 316
	Map<String, List<String>> mVariableByCallType = new HashMap<String, List<String>>();
	Map<String, List<String>> mVariableByType = new HashMap<String, List<String>>();
	
	String variable = "";
	boolean initialized = false;
	int par = 0;
	boolean dim = false, fin = true;

	//mantis EGL 312/316/324/313
	boolean isPotentialError = false;
	//when a call is fire
	boolean isCall=false;
	boolean firstCall=false;
	//when an intent(out) is produce
	boolean isIntentout=false;
	//name of sunroutine
	String nameType="";

    public COMDATAInitialisation() {
    }
	
	@Override
	public void setInputFile(IPath file) throws FileNotFoundException {
		super.setInputFile(file);
		this.zzReader = new FileReader(file.toOSString());
	}
	
	//Mantis 316 EGL : detect initialized by local fonction
	/**
	 * This function add Naming subroutin, function, module in List  
	 * in order to analyse at the end of parsing if 
	 * this variable is initialized by this naming which called in source code.
	 * this function is call when a call of naming is done.
	 * @param funct
	 * @param paramVar
	 * @param position
	 */
	private void addVariableByCallType(final String funct, final String paramVar,final String location,final int line){
		//if variable is declared
		if(variables.containsKey(paramVar)){
			//if variable is not initialized
			//then add in this  mVariableByType to check if this type naming  
			//initialize it.
			if(!variables.get(paramVar)){

				List<String> param ;
				if (mVariableByCallType.get(funct)!=null){
					param = mVariableByCallType.get(funct);
				}else{					
					param = new ArrayList<String>();					
				}
				param.add("paramVar="+paramVar);
				param.add("location="+location);
				param.add("line="+line);
				param.add("error=false");

				mVariableByCallType.put(funct,param);

			}
		}
	}

	/**
	 * This function parse Naming subroutin, function, module in List  
	 * in order to analyse at the end of parsing if 
	 * this variable is initialized by this naming .
	 * this function is applied in type or naming .
	 * @param funct
	 * @param paramVar
	 * @param position
	 */
	private void addVariableByType(final String funct, final String paramVar){

		List<String> param ;
		if (mVariableByType.get(funct)!=null){
			param = mVariableByType.get(funct);										
		}else{					
			param = new ArrayList<String>();				
		}
		param.add("paramVar="+paramVar);
		mVariableByType.put(funct,param);

	}

	/**
	 * This fonction is recommended in intent treatment to update initialized state of variable
	 * @param funct
	 * @param paramVar
	 * @return true if this variable is updated as no initialized false else
	 */
	private boolean setErrorVariableByType(final String funct, final String paramVar){
		//test limitation of this rule with call function
		boolean ret = false;  
		if(mVariableByCallType.containsKey(funct)  && mVariableByType.containsKey(funct)){
			List<String> paramCall = mVariableByCallType.get(funct);
			List<String> param = mVariableByType.get(funct);
			if(param!=null && paramCall!=null ){
				final int indexParam = param.indexOf("paramVar="+paramVar);
				//if it is the same function cause of prototype function
				//then param are in same place in signature function
				if((indexParam > -1) && (paramCall.size() >(indexParam * 4))){
					final String sParamCall = paramCall.get(indexParam * 4);
					if(sParamCall.contains("paramVar=")){
						paramCall.set(indexParam + 3, "error=true");
						ret = true;
					}
				}
			}
		}
		return ret;
	}
	
	/**
	 * this function display add violation for variables which are not initialized in call function 
	 * @throws JFlexException
	 * @throws NumberFormatException
	 */
	private void displayErrorVariableByType() throws JFlexException,NumberFormatException {
		
		//add at the end all violation error 
		//function shall be described in this source code
		if(!mVariableByCallType.isEmpty()){
			final Set<Map.Entry<String,List<String>>> entryCall = mVariableByCallType.entrySet();
			
			
			for (Map.Entry<String,List<String>> ent:entryCall){
				
				final List<String> entList =  ent.getValue();			
				if(entList!=null && !entList.isEmpty())
				for(int i=0;i<entList.size();i++){				
					if(entList.get(i).contains("paramVar=")){
						final String error= entList.get(i+3).substring(entList.get(i+3).indexOf("=")+1, entList.get(i+3).length());
						final String paramVar= entList.get(i).substring(entList.get(i).indexOf("=")+1, entList.get(i).length());
						if("true".equals(error)){
							final String dLocation= entList.get(i+1).substring(entList.get(i+1).indexOf("=")+1, entList.get(i+1).length());
							final String line= entList.get(i+2).substring(entList.get(i+2).indexOf("=")+1, entList.get(i+2).length());									
							setError(dLocation,"The variable " + paramVar + " is used before being initialized. ", Integer.parseInt(line));
												 
						}
						
					}
					
				}
				
			}	
		}
	}
		


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public COMDATAInitialisation(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 214) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public List<Violation> run() throws java.io.IOException, JFlexException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
          { //mantis 316
displayErrorVariableByType();
return getViolations();
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { yybegin(LINE);
            }
          case 44: break;
          case 2: 
            { yybegin(COMMENT);
            }
          case 45: break;
          case 3: 
            { yybegin(NEW_LINE);
            }
          case 46: break;
          case 4: 
            { throw new JFlexException( new Exception("Illegal character <" + yytext() + "> at line :"+yyline) );
            }
          case 47: break;
          case 5: 
            { 
            }
          case 48: break;
          case 6: 
            { variables.clear(); dimension.clear(); yybegin(NEW_LINE);
            }
          case 49: break;
          case 7: 
            { nameType=yytext();location = location + " " + yytext(); variables.clear(); dimension.clear(); yybegin(PARAMS);
            }
          case 50: break;
          case 8: 
            { if(variables.containsKey(yytext())) { variable = yytext(); initialized = false; yybegin(VAR_EQ);}
            }
          case 51: break;
          case 9: 
            { if(isPotentialError && variables.containsKey(variable)){
									Boolean init = variables.get(variable);
								 	if(init != null && !init){
								  		setError(location,"The variable " + variable + " is used before being initialized. ", yyline+1); 
									}
									isPotentialError=false;
								  }
								  yybegin(NEW_LINE);
            }
          case 52: break;
          case 10: 
            { isPotentialError = false;;if(variables.containsKey(variable)) variables.put(variable, true );
            }
          case 53: break;
          case 11: 
            { isIntentout=false;fin=true;
            }
          case 54: break;
          case 12: 
            { dim=false; if(fin)yybegin(NEW_LINE);
            }
          case 55: break;
          case 13: 
            { variable = yytext(); fin=true;
									 if (isIntentout){
									 	setErrorVariableByType(nameType, variable);		
									 							 
									 }	
								 	 if(!variables.containsKey(variable)) variables.put(variable, false);
								 	 if(dim) dimension.add(variable);
            }
          case 56: break;
          case 14: 
            { variables.put(variable, true ); yybegin(WAIT);
            }
          case 57: break;
          case 15: 
            { par=1; yybegin(WAIT_ARRAY);
            }
          case 58: break;
          case 16: 
            { if(!initialized) {
									Boolean init = variables.get(variable);
									if(init != null && !init) setError(location,"The variable " + variable + " is used before being initialized. ", yyline+1);
								 } 
								 initialized = false; variable = yytext();
            }
          case 59: break;
          case 17: 
            { if(!initialized) {
									Boolean init = variables.get(variable);
									if(init != null && !init) setError(location,"The variable " + variable + " is used before being initialized. ", yyline+1);
								 } 
								 initialized = false;
								 yybegin(NEW_LINE);
            }
          case 60: break;
          case 18: 
            { variable = yytext(); initialized = false;
            }
          case 61: break;
          case 19: 
            { initialized = true;
								 variables.put(variable, true );
            }
          case 62: break;
          case 20: 
            { yybegin(DECLARATION);
            }
          case 63: break;
          case 21: 
            { String var = yytext();
								 if(variables.containsKey(var)) variables.put(var, true);
            }
          case 64: break;
          case 22: 
            { par++;
            }
          case 65: break;
          case 23: 
            { par--; if(par==0) yybegin(LINE);
            }
          case 66: break;
          case 24: 
            { isCall=false;yybegin(NEW_LINE);
            }
          case 67: break;
          case 25: 
            { if (firstCall){
										 nameType=yytext();
										 firstCall=false;
										}	
										if(isCall){
										    final String var = yytext();
											addVariableByCallType(nameType, var, location,yyline +1);
										}						
										variables.put(yytext(), true)
										; fin=true;
            }
          case 68: break;
          case 26: 
            { par--; if(par==0) yybegin(DECLARATION);
            }
          case 69: break;
          case 27: 
            { addVariableByType(nameType, yytext());variables.put(yytext(), true);
            }
          case 70: break;
          case 28: 
            { String var = yytext();
								 Boolean init = variables.get(var);
								 if(init != null && !init) setError(location,"The variable " + var + " is used before being initialized. ", yyline+1);
            }
          case 71: break;
          case 29: 
            { if(!variables.containsKey(yytext())) variables.put(yytext(), false);
            }
          case 72: break;
          case 30: 
            { variable = yytext().substring(0,yytext().length()-1).trim();  par = 1;
								 if (!dimension.contains(variable)){
								 	 yybegin(FUNC);
								 		 
								 }else{
								 	 isPotentialError = true;
								 	 yybegin(ARRAY);
								 }
            }
          case 73: break;
          case 31: 
            { if(isPotentialError && variables.containsKey(variable)){
									Boolean init = variables.get(variable);
								 	if(init != null && !init){
								  		setError(location,"The variable " + variable + " is used before being initialized. ", yyline+1); 
									}
									isPotentialError=false;
								  }
            }
          case 74: break;
          case 32: 
            { variable = yytext().substring(0,yytext().length()-1).trim();  par = 1;
								  if (!dimension.contains(variable)){
								        yybegin(FUNC);
								  }else{
								  		isPotentialError = true;
								        yybegin(ARRAY);
								  }
            }
          case 75: break;
          case 33: 
            { fin=true;
            }
          case 76: break;
          case 34: 
            { String var = yytext().substring(0,yytext().length()-1).trim();
								 if (!dimension.contains(var)) { par = 1; yybegin(FUNC);}
            }
          case 77: break;
          case 35: 
            { variable = yytext().substring(0, yytext().length()-1).trim();  
									 if(!variables.containsKey(variable))variables.put(variable, false); 
									 dimension.add(variable);
            }
          case 78: break;
          case 36: 
            { yybegin(INIT);
            }
          case 79: break;
          case 37: 
            { yybegin(AVOID);
            }
          case 80: break;
          case 38: 
            { if ("call".equals(yytext().trim().toLowerCase())){
									 isCall=true;	
									 firstCall=true;	
									 }							
									 yybegin(DATA);
            }
          case 81: break;
          case 39: 
            { if ("call".equals(yytext().trim().toLowerCase())){
									 isCall=true;
		                             firstCall=true;
		                             }							 
									 yybegin(DATA);
            }
          case 82: break;
          case 40: 
            { location = yytext(); yybegin(NAMING);
            }
          case 83: break;
          case 41: 
            { dim=false; yybegin(COMMENT);
            }
          case 84: break;
          case 42: 
            { dim=true;
            }
          case 85: break;
          case 43: 
            { dim=false; isIntentout=true;
            }
          case 86: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
